{% set id = args.id or uid() %}
{% set selector = args.selector if args.selector else '' %}
{% set showPassword = args.showPassword if args.showPassword else false %}
{% set label = args.label if args.label else '' %}
{% set name = args.name if args.name else '' %}
{% set note = args.note if args.note else '' %}
{% set noteUnder = args.noteUnder if args.noteUnder else true %}
{% set type = args.type if args.type else "text" %}
{% set isVisible = false %}
{% set style = args.style if args.style else "" %}
{% set disabled = args.disabled if args.disabled else false %}
{% set placeholder = args.placeholder if args.placeholder else "" %}
{% set colors = themeProperties.current_colors %}
{% set inputsProps = themeProperties.inputs %}

{% set commonFontColor = safe_get(inputsProps.common_font_color, 'light_font_color') %}
{% set commonFontSize = safe_get(inputsProps.common_font_size, 16) %}
{% set commonFontWeight = safe_get(inputsProps.common_font_weight, 400) %}
{% set commonLineHeight = safe_get(inputsProps.common_line_height, 24) %}

{% set labelFontColor = safe_get(inputsProps.common_label_font_color, 'light_font_color') %}
{% set labelFontSize = safe_get(inputsProps.common_label_font_size, 14) %}
{% set labelFontWeight = safe_get(inputsProps.common_label_font_weight, 500) %}
{% set labelLineHeight = safe_get(inputsProps.common_label_line_height, 17) %}
{% set labelAlign = safe_get(inputsProps.common_label_text_align, 'left') %}

{% set globalClass = 'snippet-input-text' %}
{% set localClass = id %}

<style>
  .{{ localClass }}__label {
    display: flex;
    justify-content: {{ labelAlign }};
    color: {{ colors[labelFontColor] }};
    font-size: {{ labelFontSize }}px;
    font-weight: {{ labelFontWeight }};
    line-height: {{ labelLineHeight }}px;
  }
  .{{ localClass }}__input::placeholder {
    color: {{ colors[commonFontColor] }};
    font-size: {{ commonFontSize }}px;
    font-weight: {{ commonFontWeight }};
    line-height: {{ commonLineHeight }}px;
  }
</style>

<div class="{{ globalClass }} {{ localClass}} {{'position-relative' if showPassword else ''}} mb-3">
  {% if label %}
    <label
      class="sellix-label {{ globalClass }}__label {{ localClass }}__label"
      for="{{name}}"
    >
      {{label}}
    </label>
  {% endif %}

  {% if note and not noteUnder %}
    <p class="sellix-note">{{note}}</p>
  {% endif %}

  <input
    class="sellix-input {{ globalClass}}__input {{ localClass }}__input"
    autoComplete="{{'' if type == 'email' else 'off'}}"
    type="{{'text' if showPassword and isVisible}}{{'password' if showPassword and not isVisible}}{{type if not showPassword and type}}{{'text' if not type and not showPassword}}"
    id="{{name}}"
    name="{{name}}"
    {{'disabled' if disabled}}
    placeholder="{{placeholder }}"
    style="{{style}}; height: {{ inputsProps.common_height }}px; background: {{ colors[inputsProps.text_field_background] }}; border: {{ "1px solid var(--borderColor)" if inputsProps.common_show_border else "none" }}; color: {{ colors[inputsProps.common_font_color] }}; font-size: {{ inputsProps.common_font_size }}px; font-weight: {{ inputsProps.common_font_weight }};"
  >

  {% if showPassword  %}
    {% render_snippet 'Hide Password Icon', id=id, class="sellix-input-visible" %}
  {% endif %}

  {% if note and noteUnder %}
    <p class="sellix-note">{{note}}</p>
  {% endif %}
</div>

<script type='application/javascript'>
  $(document).ready(function () {
    const $input = $('.{{ localClass }}__input');
    $('#sellix-input-visible-{{id}}').on('click', function () {
      const type = $input.attr('type');
      if( type === 'password' ){
        $input.attr('type', 'text');
      } else {
        $input.attr('type', 'password');
      }
    });
  });
</script>
