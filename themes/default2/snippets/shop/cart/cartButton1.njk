{% set id = uid() %}
{% set shop = global.common.shopInfo.shop %}
{% set product = args.product %}
{% set subscription = global.common.shopInfo.subscription %}
{% set cartEnabled = global.common.cartEnabled %}
{% set colors = themeProperties.current_colors %}

{% set isStatic = args.is_static %}
{% set redirectToCheckout = args.redirect_to_checkout %}
{% set properties = args.properties %}
{% set bgColor = safe_get(properties.background_color, 'background_accent_dark') %}
{% set color = safe_get(properties.color, 'dark_font_color') %}

{% set globalClass = 'snippet-cart-button-1' %}
{% set localClass = id %}

<style>
  .{{ localClass }} .{{ localClass }}__button {
    background-color: {{ colors[bgColor] }};
    color: {{ colors[color] }}
  }
</style>

{% if product.stock | int === 0 or not cartEnabled or product.on_hold | int !== 0 %}
  {# Do Nothing #}
{% else %}
  <div class="{{ globalClass }} {{ localClass }} empty {{'static' if isStatic else ''}}">
    <div class="{{ globalClass }}__button {{ localClass }}__button" data-cart-product-minus-button="1">
      <i class="fa-regular fa-minus"></i>
    </div>
    <div
      class="{{ globalClass }}__button {{ localClass }}__button unselectable"
      data-cart-product-quantity-button="cart-product-quantity-button"
    >
      <span class="d-none" style="font-weight: 500" data-cart-product-quantity-value="1"></span>
      <span class="d-none" style="line-height: 0" data-cart-product-first-button="1">
        {% render_snippet 'Icons: Cart add' %}
      </span>

    </div>
    <div class="{{ globalClass }}__button {{ localClass }}__button" data-cart-product-plus-button="1">
      <i class="fa-regular fa-plus"></i>
    </div>
  </div>

  <script type='application/javascript'>
    $(document).ready(async function () {
      const product = await SellixContext.getShopProduct('{{ product.uniqid }}');
      let cart = window.SellixCartStoreFactory.getCart('{{shop.name}}');
      const cartProdComponent = new SellixCartProductComponent(
        '.{{ localClass }}',
        cart,
        product,
        {{redirectToCheckout | default(false)}},
        {{renderOptions | dump | safe}},
      );
      setTimeout(() => cartProdComponent.render(), 0);
    });
  </script>
{% endif %}
