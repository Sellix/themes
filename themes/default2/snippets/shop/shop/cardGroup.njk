{% set id = uid() %}
{% set group = args.group %}
{% set isPlaceholder = not group.image_name %}
{% set image = cdn_link(group.cloudflare_image_id, 'shopItem') %}
{% set colors = themeProperties.current_colors %}
{% set cardProps = themeProperties.cards %}
{% set properties = args.properties %}

{% set showBadge = safe_get(properties.show_product_type_badge, true) %}
{% set background = safe_get(properties.background_color, cardProps.product_card_background_color) %}
{% set border = '1px solid var(--borderColor)' if safe_get(properties.show_border, cardProps.product_card_show_border) else 'none' %}
{% set borderRadius = safe_get(properties.border_radius, cardProps.product_card_border_radius) %}
{% set shadow = safe_get(properties.shadow, cardProps.product_card_shadow) %}
{% set imageBorderRadius = safe_get(properties.image_border_radius, cardProps.product_card_image_border_radius) %}
{% set imageHeight = safe_get(properties.image_height, cardProps.product_card_image_height) %}
{% set infoPaddingHoriz = safe_get(properties.info_padding_horiz, cardProps.product_card_info_padding_horiz) %}
{% set infoPaddingVert = safe_get(properties.info_padding_vert, cardProps.product_card_info_padding_vert) %}

{% set titleFontcolor = safe_get(properties.title_font_color, cardProps.product_card_title_font_color) %}
{% set titleFontSize = safe_get(properties.title_font_size, cardProps.product_card_title_font_size) %}
{% set titleFontWeight = safe_get(properties.title_font_weight, cardProps.product_card_title_font_weight) %}
{% set titleLineHeight = safe_get(properties.title_line_height, cardProps.product_card_title_line_height) %}
{% set titleTextAlign = safe_get(properties.title_text_align, cardProps.product_card_title_text_align) %}

{% set descriptionFontColor = safe_get(properties.description_font_color, cardProps.product_card_description_font_color) %}
{% set descriptionFontSize = safe_get(properties.description_font_size, cardProps.product_card_description_font_size) %}
{% set descriptionFontWeight = safe_get(properties.description_font_weight, cardProps.product_card_description_font_weight) %}

{% set priceFontColor = safe_get(properties.price_font_color, cardProps.product_card_price_font_color) %}
{% set priceFontSize = safe_get(properties.price_font_size, cardProps.product_card_price_font_size) %}
{% set priceFontWeight = safe_get(properties.price_font_weight, cardProps.product_card_price_font_weight) %}

{% set globalClass =  'sellix-product-card' %}
{% set localClass = id %}

<style>
  .{{ localClass }}__container {
    border: {{ border }};
    border-radius: {{ borderRadius }}px;
    box-shadow: {{ shadow }};
  }
  .{{ localClass }}__card {
    background: {{ colors[background] }};
  }
  .{{ localClass }}__title {
    color: {{ colors[titleFontcolor] }};
    font-size: {{ titleFontSize }}px;
    font-weight: {{ titleFontWeight }};
    line-height: {{ titleLineHeight }}px;
    justify-content: {{ titleTextAlign }};
  }
  .{{ localClass }}__info {
    padding: {{ infoPaddingVert }}px {{ infoPaddingHoriz }}px;
  }
  .{{ localClass }}__description {
    color: {{ colors[descriptionFontColor] }};
    font-size: {{ descriptionFontSize }}px;
    font-weight: {{ descriptionFontWeight }};
  }
  .{{ localClass }}__price {
    color: {{ colors[priceFontColor] }};
    font-size: {{ priceFontSize }}px;
    font-weight: {{ priceFontWeight }};
  }
  .{{ localClass }}__image {
    min-height: {{ imageHeight }}px;
    height: {{ imageHeight }}px;
  }
  .{{ localClass }}__image.placeholder {
    border: 1px solid var(--borderColor)
  }
  .{{ localClass }}__image, .{{ localClass }}__image img {
    border-radius: {{ imageBorderRadius }}px;
    border-top-left-radius: {{ imageBorderRadius or borderRadius }}px;
    border-top-right-radius: {{ imageBorderRadius or borderRadius }}px;
  }
</style>

<div class="{{ globalClass }} {{ localClass }} d-flex w-100 position-relative">
  <div class="{{ globalClass }}__container {{ localClass }}__container" data-group-id="{{group.uniqid}}">
    {% if showBadge %}
      <div class="{{ globalClass }}__badge-container">
        <div class="{{ globalClass }}__badge">
          {{ 'shop.shared.titles.productType.group' | t }}
        </div>
      </div>
    {% endif %}

    <div class="{{ globalClass }}__card {{ localClass }}__card unselectable">
      <div class="{{ globalClass }}__image {{ localClass }}__image {{'placeholder' if isPlaceholder else ''}}">
        {% if isPlaceholder %}
          <i class="fa-light fa-layer-group"></i>
        {% else %}
          <img src="{{image}}" alt="{{group.title}}" loading="lazy" />
        {% endif %}
      </div>

      <div class="{{ globalClass }}__info {{ localClass }}__info">
        <div class="{{ globalClass }}__description {{ localClass }}__description">
          {% if group.minPriceItem %}
            <div class="{{ globalClass }}__group-description-info">
              <span>{{ 'shop.shared.titles.startingAt' | t }} </span>

              <span class="{{ globalClass }}__price {{ localClass }}__price">
                {% render_snippet
                  'Price',
                  currency=group.minPriceItem.currency,
                  price=group.minPriceItem.price_display
                %}
              </span>
            </div>
          {% else %}
            <span>
              {{ 'shop.main.cards.group.outOfProducts' | t }}
            </span>
          {% endif %}
        </div>

        <div class="{{ globalClass }}__title {{ localClass }}__title">
          {{group.title}}
        </div>
      </div>
    </div>
  </div>
</div>

<script type='application/javascript'>
  $(document).ready(function () {
    $('.{{ localClass }}__container').on('click', async function () {
      const groupId = $(this).data('group-id');
      const items = await SellixContext.getShopItems();
      const group = items.find(({uniqid}) => String(uniqid) === String(groupId));

      if (group && group.products_bound.length) {
        $(document).trigger('SellixSetActiveModalGroup', { groupId });
        $('#group-card-modal').modal({
          modalClass: '',
          blockerClass: '',
          showClose: false,
        });
      }
    });

    {% if global.request.type === 'group' and global.request.options.itemId === group.uniqid %}
      setTimeout(function() {
        $('.{{ localClass }}__container').click();
      }, 0);
    {% endif %}
  });
</script>
