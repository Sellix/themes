{% set id = uid() %}
{% set shopInfo = global.common.shopInfo %}
{% set shop = shopInfo.shop %}
{% set categories = shopInfo.categories %}
{% set colors = themeProperties.current_colors %}
{% set inputsProps = themeProperties.inputs %}

{% set globalClass = 'block-product-list-filter'%}
{% set rootClass = [globalClass, '-', id] | join %}

<style>
  .{{ rootClass}} {
    {% if properties.container_background_color %}background: {{ colors[properties.container_background_color] }};{% endif %}
    border: {% if properties.show_border %}1px solid var(--borderColor){% else %}none{% endif %};
    box-shadow: {{ properties.container_shadow }};
    border-radius: {{ properties.container_border_radius }}rem;
    {% if properties.container_padding %}padding: {{ properties.container_padding }}px;{% endif %}
  }

  .{{ globalClass}}__search input {
    border-radius: 0.5rem;
    padding: 1rem 2.5rem 1rem 1rem;
    font-size: {{ inputsProps.common_font_size }}px;
    font-weight: {{ inputsProps.common_font_weight }};
    color: {{ colors[inputsProps.common_font_color] }};
    background-color: {{ colors[properties.input_background_color] }};
    box-shadow: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border: {{ "1px solid var(--borderColor)" if inputsProps.common_show_border else "none" }};
    width: 100%;
    height: {{ inputsProps.common_height }}px;
    font-family: inherit;
  }

  .{{ globalClass }}__search input:focus {
    outline: none;
    border: {{ "1px solid var(--brandColor)" if inputsProps.common_show_border else "none" }};
  }

  .{{ globalClass }}__search input::placeholder {
    font-size: {{ inputsProps.common_font_size }}px;
    font-weight: {{ inputsProps.common_font_weight }};
    color: {{ colors[inputsProps.common_font_color] }};
    opacity: 0.7;
  }

  .{{ globalClass }}__search .fas {
    color: {{ colors[inputsProps.common_font_color] }} !important;
  }

  .sellix-dropdown .select2-container--sellix {
    width: 100%!important;
    cursor: pointer;
  }

  .sellix-dropdown .select2-container--sellix .select2-selection--single {
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-height: {{ inputsProps.common_height }}px;
    background-color: {{ colors[properties.input_background_color] }};
    border-radius: 0.5rem;
    border: {{ "1px solid var(--borderColor)" if inputsProps.common_show_border else "none" }};
  }

  .sellix-dropdown .select2-container--sellix .select2-selection__rendered {
    padding-left: 1rem !important;
    color: {{ colors[inputsProps.common_font_color] }};
    font-size: {{ inputsProps.common_font_size }}px;
    font-weight: {{ inputsProps.common_font_weight }};
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline;
    max-width: 90%;
  }

  .sellix-dropdown .select2-container--sellix .select2-selection__arrow b:before {
    position: relative;
    content: '';
    display: inline-block;
    width: 0.4em;
    height: 0.4em;
    border-right: 0.2em solid var(--thinColor);
    border-top: 0.2em solid var(--thinColor);
    transform: rotate(135deg);
    margin-right: 0.5em;
  }

  .select2-container--sellix .select2-dropdown {
    border: {{ "1px solid var(--borderColor)" if inputsProps.show_dropdown_border else "none" }} !important;
    margin-top: 8px;
    margin-bottom: 8px;
    box-shadow: none;
    border-radius: 4px !important;
    padding-top: 4px;
    padding-bottom: 4px;
    background-color: {{ colors[properties.input_background_color] }} !important;
  }

  .select2-container--sellix .select2-results__option {
    font-size: {{ inputsProps.dropdown_option_font_size }}px !important;
    font-weight: {{ inputsProps.dropdown_option_font_weight }};
    color: {{ colors[inputsProps.dropdown_option_font_color] }} !important;
    padding: 0 1rem !important;
    display: flex !important;
    align-items: center;
    height: {{ inputsProps.common_height }}px;
  }

  .select2-container--sellix .select2-results__option.select2-results__option--highlighted {
    background-color: {{ colors[inputsProps.dropdown_option_background_hover] }} !important;
  }

  .select2-container--sellix .select2-results__option[aria-selected='true'] {
    background-color: {{ colors[inputsProps.dropdown_active_option_background] }} !important;
    color: {{ colors[inputsProps.dropdown_active_option_font_color] }} !important;
  }
</style>

<div class="{{ globalClass }}__container {{ rootClass }}">
  {% if shop.search_enabled %}
    <label for="shop-search-{{id}}" class="{{ globalClass }}__item {{ globalClass }}__search">
      <i class="fa-regular fas fa-search"></i>
      <input
        type="text"
        id="shop-search-{{id}}"
        value=""
        placeholder="{{ 'shop.main.productList.filter.placeholder' | t }}"
      />
    </label>
  {% endif %}

  {% if categories | length %}
    <div class="sellix-dropdown {{ globalClass }}__item {{ globalClass }}__categories-dropdown">
      <select id="category-select-{{id}}" class="category-select" style="background: {{ colors[inputsProps.select_background] }} "></select>
    </div>
  {% endif %}

  {% if shop.sort_enabled %}
    <div class="sellix-dropdown {{ globalClass }}__item {{ globalClass }}__sort-dropdown">
      <select id="sort-select-{{id}}" class="sort-select">
        <option value="DEFAULT">{{ 'shop.main.productList.filter.default' | t }}</option>
        <option value="PRICE">{{ 'shop.main.productList.filter.price' | t }}</option>
        <option value="NAME">{{ 'shop.main.productList.filter.name' | t }}</option>
        <option value="TYPE">{{ 'shop.main.productList.filter.type' | t }}</option>
        <option value="STOCK">{{ 'shop.main.productList.filter.stock' | t }}</option>
      </select>
    </div>
  {% endif %}
</div>

<script type='application/javascript'>
  $(document).ready(function () {
    const categories = __RENDER_CONTEXT__.common.shopInfo.categories;

    let search = '', category = 'all', sort = 'DEFAULT';

    $('.empty-shop-container button').on('click', () => {
      $('#shop-search-{{id}}').val('').trigger('keyup');
    });

    $('#shop-search-{{id}}').on('keyup', function (e) {
      search = e.target.value;
      $(document).trigger('SellixProductListFilterChangeEvent', { search, category, sort });
    });

    $('#category-select-{{id}}').select2({
      data: [
        {
          text: "{{ 'shop.main.productList.filter.allCategories' | t }}",
          id: "all",
        },
        {% for category in categories %}
          {% if not category.unlisted %}
          {
            text: "{{category.title}}",
            id: "{{category.uniqid}}"
          },
          {% endif %}
        {% endfor %}
      ],
      minimumResultsForSearch: -1,
      theme: 'sellix',
    }).on('change', (e) => {
      category = e.target.value;
      $(document).trigger('SellixProductListFilterChangeEvent', { search, category, sort });
    });

    $('#sort-select-{{id}}').select2({
      templateSelection: (state) => {
        if (state.id) {
          return `{{ 'shop.main.productList.filter.indexBy' | t }}: ${state.text}`;
        }
        return state.text;
      },
      minimumResultsForSearch: -1,
      theme: 'sellix',
    }).on('change', (e) => {
      sort = e.target.value;
      $(document).trigger('SellixProductListFilterChangeEvent', { search, category, sort });
    });

    setTimeout(function() {
      {% if global.request.type === 'category' %}
        $('#category-select-{{id}}').val('{{ global.request.options.itemId }}');
        $('#category-select-{{id}}').trigger('change');
      {% endif %}

      $('#sort-select-{{id}}').val('{{ shop.default_sort }}');
      $('#sort-select-{{id}}').trigger('change');
    }, 0);
  });
</script>
