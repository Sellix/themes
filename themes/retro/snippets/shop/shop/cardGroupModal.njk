{% set id = uid() %}

{% set globalClass = 'snippet-product-card' %}
{% set localClass = id %}

<style>
  .{{ localClass }}__header {
    padding-right: 2.5rem
  }
  .{{ localClass }}__body {
    overflow-y: scroll;
    flex: 1 0 auto;
    max-height: calc(90vh - 120px);
  }

  .{{ localClass }}__body .snippet-product-list__option {
    padding: 24px 0;
  }
</style>

<div id="group-card-modal" class="sellix-modal sellix-ui-container {{ globalClass }}__modal" style="display:none">
  <a href='#' class="sellix-modal-close" rel="modal:close">
    <i class="fa-light fa-times" style="color: var(--darkFontColor); font-size: 1.25rem;"></i>
  </a>
  <div class="sellix-modal-header {{ globalClass }}__header {{ localClass }}__header"></div>
  <div class="sellix-modal-body px-0 py-0 {{ globalClass }}__body {{ localClass }}__body"></div>
</div>

<script type="application/javascript">
  $(document).ready(function() {
    const items = SellixContext.getShopItems();

    $(document).on('SellixSetActiveModalGroup', function(e, eventInfo) {
      const renderOptions = {{renderOptions | dump | safe}};
      const group = items.find(({uniqid}) => String(uniqid) === String(eventInfo.groupId));
      const $modalBody = $('#group-card-modal .sellix-modal-body');

      const productsCount = group.products_bound.length;
      const headerHtml = `<div>${group.title}</div> ` +
        (productsCount > 0
          ? (
            '<div class="sellix-modal-header-subtitle">' +
            String(productsCount) + ' ' +
            window.sellixI18Next.t('shared.product.quantity', { 'count': +productsCount }) +
            '</div>'
          )
          : '');

      $('#group-card-modal .sellix-modal-header').html(headerHtml);

      $modalBody.html(`<div class="w-100 d-flex justify-content-center align-items-center pt-3">` +
        `{% render_snippet 'Shared: Loader', color_class='black' %}` +
      `</div>`);

      sellixApi
        .renderComponent(
          {
            ...renderOptions,
            path: [renderOptions.path, ['snippet', 'Card: Group products'].join(':')].join(';'),
          },
          SellixContext.get('request'),
          {
            dependencies: [{'type': 'group', 'groupId': group.uniqid}]
          },
        )
        .then((resp) => {
          const $component = $(resp.html);
          $component.css('display', 'none');
          $modalBody.html($component);
          setTimeout(function () {
            $(document).trigger('SellixCartUpdateEvent', { action: 'update' });
            $component.css('display', '');
            window.SellixAnalyticsManager.sendViewItem(group.uniqid);
          });
        })
        .catch((resp) => {
          console.log(resp);
          const respJson = resp.responseJSON || {};
          $(document).trigger('SellixToastify', {
            type: 'error',
            text: respJson.message || 'Internal server error',
          });
        });
    });
  });
</script>