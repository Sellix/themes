{% set id = uid() %}
{% set product=global.common.productInfo.product %}

{% set termsVisible = properties.terms_visible == 'show'
  or (properties.terms_visible == 'not_empty' and product.terms_of_service) %}

{% set feedbackVisible = properties.feedback_visible == 'show'
  or (properties.feedback_visible == 'not_empty' and product.feedback.list | length > 0) %}

{% if feedbackVisible %}
  {% set activeTab = 'feedback' %}
{% elif termsVisible %}
  {% set activeTab = 'terms' %}
{% endif %}

{% set countVisibleTabs = 0 %}
{% set countVisibleTabs = countVisibleTabs + (1 if feedbackVisible else 0) %}
{% set countVisibleTabs = countVisibleTabs + (1 if termsVisible else 0) %}

{% set bgColor = safe_get(properties.container_background_color, 'transparent') %}
{% set showBorder = safe_get(properties.container_show_border, false) %}
{% set borderRadius = safe_get(properties.container_border_radius, 0) %}
{% set shadow = safe_get(properties.container_shadow, 'none') %}
{% set paddingVert = safe_get(properties.container_padding_vert, 0) %}
{% set paddingHoriz = safe_get(properties.container_padding_horiz, 0) %}

{% set localClass = id %}

{% if countVisibleTabs > 0 %}
  <style>
    .{{ localClass }}__container, .snippet-product-feedback__btn-view-more {
      border: {{ '1px solid var(--borderColor)' if showBorder else 'none' }};
      background: {{ bgColor | get_color }};
      border-radius: {{ borderRadius }}px;
      box-shadow: {{ shadow }};
      padding: {{ paddingVert }}px {{ paddingHoriz }}px;
    }
  </style>

  <div class="{{ globalClass }}__container {{ localClass }}__container">
    {% if countVisibleTabs > 1 %}
      <div class="tabs {{ globalClass }}__tabs {{ localClass }}__tabs">
        {% if feedbackVisible %}
        <a class="tab {{ 'active' if activeTab == 'feedback' else '' }}" href="javascript:void(0);" data-tab-name="feedback">
          {{ 'shop.product.relations.feedback.title' | t }}
        </a>
        {% endif %}

        {% if termsVisible %}
        <a class="tab {{ 'active' if activeTab == 'terms' else '' }}" href="javascript:void(0);" data-tab-name="terms">
          {{ 'shop.product.relations.termsOfService.title' | t }}
        </a>
        {% endif %}
      </div>
    {% endif %}

    {% if feedbackVisible %}
    <div class="tab-content {{ 'd-non' if activeTab != 'feedback' else '' }}" data-tab-name="feedback">
      {% render_snippet 'Product: Feedback',
        product=product,
        properties={
          'page_size': properties.feedback_page_size,
          'card_background_color': properties.feedback_card_background_color,
          'card_show_border': properties.feedback_card_show_border,
          'card_border_radius': properties.feedback_card_border_radius,
          'card_shadow': properties.feedback_card_shadow,
          'reply_background_color': properties.feedback_reply_background_color
        }
      %}
    </div>
    {% endif %}

    {% if termsVisible %}
    <div class="tab-content {{ 'd-none' if activeTab != 'terms' else '' }}" data-tab-name="terms">
      {% render_snippet 'Product: Terms',
        product=product,
        properties={
          'container_background_color': properties.terms_container_background_color,
          'container_show_border': properties.terms_container_show_border,
          'container_border_radius': properties.terms_container_border_radius,
          'container_shadow': properties.terms_container_shadow,
          'container_padding_horiz': properties.terms_container_padding_horiz,
          'container_padding_vert': properties.terms_container_padding_vert
        }
      %}
    </div>
    {% endif %}
  </div>

  <script type="application/javascript">
    {% if countVisibleTabs > 1 %}
      $(document).ready(function() {
        let activeTabName = '{{ activeTab }}';

        const $container = $('.{{ localClass }}__container');
        const $tabs = $container.find('.tabs');

        if (activeTabName) {
          $tabs.find(`.tab[data-tab-name=${activeTabName}]`).addClass('active');
          $container.find(`.tab-content[data-tab-name=${activeTabName}]`).removeClass('d-none');
        }

        $tabs.find('.tab').on('click', function(event) {
          event.preventDefault();
          const tabName = $(this).data('tabName');

          if (tabName !== activeTabName) {
            $tabs.find(`.tab[data-tab-name=${activeTabName}]`).removeClass('active');
            $tabs.find(`.tab[data-tab-name=${tabName}]`).addClass('active');

            $container.find(`.tab-content[data-tab-name=${activeTabName}]`).addClass('d-none');
            $container.find(`.tab-content[data-tab-name=${tabName}]`).removeClass('d-none');
            activeTabName = tabName;
          }
        });
      });
    {% endif %}
  </script>
{% endif %}

{% if
  (settings.group_names_to_hide or settings.group_name)
  and (countVisibleTabs == 0 or (countVisibleTabs == 1 and product.feedback.list | length == 0))
%}
  <script type="application/javascript">
      const event = new CustomEvent(
      'SellixHideGroupEvent',
      { detail: { groupName: '{{ settings.group_names_to_hide or settings.group_name }}' } },
      );
      setTimeout(() => document.dispatchEvent(event), 0);
  </script>
{% endif %}