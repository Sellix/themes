function root(env, context, frame, runtime, cb) {
var lineno = 0;
var colno = 0;
var output = "";
try {
var parentTemplate = null;
var t_1;
t_1 = (lineno = 0, colno = 30, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"average_score"),0])) || 0;
frame.set("averageScore", t_1, true);
if(frame.topLevel) {
context.setVariable("averageScore", t_1);
}
if(frame.topLevel) {
context.addExport("averageScore", t_1);
}
var t_2;
t_2 = (lineno = 1, colno = 30, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"reviews_count"),0])) || 0;
frame.set("reviewsCount", t_2, true);
if(frame.topLevel) {
context.setVariable("reviewsCount", t_2);
}
if(frame.topLevel) {
context.addExport("reviewsCount", t_2);
}
var t_3;
t_3 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"properties");
frame.set("properties", t_3, true);
if(frame.topLevel) {
context.setVariable("properties", t_3);
}
if(frame.topLevel) {
context.addExport("properties", t_3);
}
output += "\n";
var t_4;
t_4 = (lineno = 4, colno = 28, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"stars_count"),5]));
frame.set("starsCount", t_4, true);
if(frame.topLevel) {
context.setVariable("starsCount", t_4);
}
if(frame.topLevel) {
context.addExport("starsCount", t_4);
}
var t_5;
t_5 = (lineno = 5, colno = 26, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"star_size"),16]));
frame.set("starSize", t_5, true);
if(frame.topLevel) {
context.setVariable("starSize", t_5);
}
if(frame.topLevel) {
context.addExport("starSize", t_5);
}
var t_6;
t_6 = (lineno = 6, colno = 27, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"star_color"),"dark_font_color"]));
frame.set("starColor", t_6, true);
if(frame.topLevel) {
context.setVariable("starColor", t_6);
}
if(frame.topLevel) {
context.addExport("starColor", t_6);
}
var t_7;
t_7 = (lineno = 7, colno = 32, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"score_font_color"),"dark_font_color"]));
frame.set("scoreFontColor", t_7, true);
if(frame.topLevel) {
context.setVariable("scoreFontColor", t_7);
}
if(frame.topLevel) {
context.addExport("scoreFontColor", t_7);
}
var t_8;
t_8 = (lineno = 8, colno = 31, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"score_font_size"),24]));
frame.set("scoreFontSize", t_8, true);
if(frame.topLevel) {
context.setVariable("scoreFontSize", t_8);
}
if(frame.topLevel) {
context.addExport("scoreFontSize", t_8);
}
var t_9;
t_9 = (lineno = 9, colno = 33, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"score_font_weight"),600]));
frame.set("scoreFontWeight", t_9, true);
if(frame.topLevel) {
context.setVariable("scoreFontWeight", t_9);
}
if(frame.topLevel) {
context.addExport("scoreFontWeight", t_9);
}
var t_10;
t_10 = (lineno = 10, colno = 33, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"score_line_height"),30]));
frame.set("scoreLineHeight", t_10, true);
if(frame.topLevel) {
context.setVariable("scoreLineHeight", t_10);
}
if(frame.topLevel) {
context.addExport("scoreLineHeight", t_10);
}
var t_11;
t_11 = (lineno = 11, colno = 34, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"reviews_font_color"),"light_font_color"]));
frame.set("reviewsFontColor", t_11, true);
if(frame.topLevel) {
context.setVariable("reviewsFontColor", t_11);
}
if(frame.topLevel) {
context.addExport("reviewsFontColor", t_11);
}
var t_12;
t_12 = (lineno = 12, colno = 33, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"reviews_font_size"),14]));
frame.set("reviewsFontSize", t_12, true);
if(frame.topLevel) {
context.setVariable("reviewsFontSize", t_12);
}
if(frame.topLevel) {
context.addExport("reviewsFontSize", t_12);
}
var t_13;
t_13 = (lineno = 13, colno = 35, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"reviews_font_weight"),400]));
frame.set("reviewsFontWeight", t_13, true);
if(frame.topLevel) {
context.setVariable("reviewsFontWeight", t_13);
}
if(frame.topLevel) {
context.addExport("reviewsFontWeight", t_13);
}
var t_14;
t_14 = (lineno = 14, colno = 35, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"reviews_line_height"),20]));
frame.set("reviewsLineHeight", t_14, true);
if(frame.topLevel) {
context.setVariable("reviewsLineHeight", t_14);
}
if(frame.topLevel) {
context.addExport("reviewsLineHeight", t_14);
}
output += "\n";
var t_15;
t_15 = ["snippet-feedback-stat"];
frame.set("globalClass", t_15, true);
if(frame.topLevel) {
context.setVariable("globalClass", t_15);
}
if(frame.topLevel) {
context.addExport("globalClass", t_15);
}
var t_16;
t_16 = runtime.contextOrFrameLookup(context, frame, "id");
frame.set("localClass", t_16, true);
if(frame.topLevel) {
context.setVariable("localClass", t_16);
}
if(frame.topLevel) {
context.addExport("localClass", t_16);
}
output += "\n<style>\n  .";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += " {\n    color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.contextOrFrameLookup(context, frame, "scoreFontColor")), env.opts.autoescape);
output += ";\n    font-size: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "scoreFontSize"), env.opts.autoescape);
output += "px;\n    font-weight: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "scoreFontWeight"), env.opts.autoescape);
output += ";\n    line-height: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "scoreLineHeight"), env.opts.autoescape);
output += "px;\n  }\n  .";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "__stars {\n    display: flex;\n    align-items: center;\n    color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.contextOrFrameLookup(context, frame, "reviewsFontColor")), env.opts.autoescape);
output += ";\n    font-size: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "reviewsFontSize"), env.opts.autoescape);
output += "px;\n    font-weight: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "reviewsFontWeight"), env.opts.autoescape);
output += ";\n    line-height: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "reviewsLineHeight"), env.opts.autoescape);
output += "px;\n  }\n</style>\n\n<div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += " ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "\">\n\n";
(function(cb) {if((env.getFilter("to_fixed").call(context, env.getFilter("round").call(context, env.getFilter("float").call(context, runtime.contextOrFrameLookup(context, frame, "averageScore")),1),0) == 0)) {
output += "    ";
output += "\n";
cb();
}
else {
output += "    <div>\n      ";
output += runtime.suppressValue(env.getFilter("to_fixed").call(context, env.getFilter("round").call(context, env.getFilter("float").call(context, runtime.contextOrFrameLookup(context, frame, "averageScore")),1),1), env.opts.autoescape);
output += "\n    </div>\n    <div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += "__stars ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "__stars\">\n";
env.getExtension("RenderSnippet")["run"](context,"Shared: Rating star",runtime.makeKeywordArgs({"rating": runtime.contextOrFrameLookup(context, frame, "averageScore"),"size": runtime.contextOrFrameLookup(context, frame, "starSize"),"iconsCount": runtime.contextOrFrameLookup(context, frame, "starsCount"),"color": (env.getFilter("get_color").call(context, runtime.contextOrFrameLookup(context, frame, "starColor")))}), function(t_18,t_17) {
if(t_18) { cb(t_18); return; }
output += runtime.suppressValue(t_17, true && env.opts.autoescape);
output += "      <span class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += "__reviews ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "__reviews\">\n        (";
output += runtime.suppressValue(env.getFilter("t").call(context, "shop.shared.reviews.reviewsWithCount",{"count": runtime.contextOrFrameLookup(context, frame, "reviewsCount")}), env.opts.autoescape);
output += ")\n      </span>\n    </div>\n";
cb()});
}
})(function(t_19) {
if(t_19) { cb(t_19); return; }output += "</div>\n";
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
});
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};
