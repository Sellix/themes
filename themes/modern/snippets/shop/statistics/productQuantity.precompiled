function root(env, context, frame, runtime, cb) {
var lineno = 0;
var colno = 0;
var output = "";
try {
var parentTemplate = null;
var t_1;
t_1 = (lineno = 0, colno = 15, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "uid"), "uid", context, []));
frame.set("id", t_1, true);
if(frame.topLevel) {
context.setVariable("id", t_1);
}
if(frame.topLevel) {
context.addExport("id", t_1);
}
var t_2;
t_2 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"properties");
frame.set("properties", t_2, true);
if(frame.topLevel) {
context.setVariable("properties", t_2);
}
if(frame.topLevel) {
context.addExport("properties", t_2);
}
output += "\n";
var t_3;
t_3 = runtime.memberLookup((runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"common")),"shopInfo")),"shop");
frame.set("shop", t_3, true);
if(frame.topLevel) {
context.setVariable("shop", t_3);
}
if(frame.topLevel) {
context.addExport("shop", t_3);
}
var t_4;
t_4 = (runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "shop")),"average_score")?runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "shop")),"average_score"):0);
frame.set("average_score", t_4, true);
if(frame.topLevel) {
context.setVariable("average_score", t_4);
}
if(frame.topLevel) {
context.addExport("average_score", t_4);
}
output += "\n";
var t_5;
t_5 = (lineno = 6, colno = 23, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"align"),"center"]));
frame.set("align", t_5, true);
if(frame.topLevel) {
context.setVariable("align", t_5);
}
if(frame.topLevel) {
context.addExport("align", t_5);
}
output += "\n";
var t_6;
t_6 = (lineno = 8, colno = 32, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"value_font_color"),"dark_font_color"]));
frame.set("valueFontColor", t_6, true);
if(frame.topLevel) {
context.setVariable("valueFontColor", t_6);
}
if(frame.topLevel) {
context.addExport("valueFontColor", t_6);
}
var t_7;
t_7 = (lineno = 9, colno = 31, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"value_font_size"),24]));
frame.set("valueFontSize", t_7, true);
if(frame.topLevel) {
context.setVariable("valueFontSize", t_7);
}
if(frame.topLevel) {
context.addExport("valueFontSize", t_7);
}
var t_8;
t_8 = (lineno = 10, colno = 33, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"value_font_weight"),500]));
frame.set("valueFontWeight", t_8, true);
if(frame.topLevel) {
context.setVariable("valueFontWeight", t_8);
}
if(frame.topLevel) {
context.addExport("valueFontWeight", t_8);
}
var t_9;
t_9 = (lineno = 11, colno = 33, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"value_line_height"),29]));
frame.set("valueLineHeight", t_9, true);
if(frame.topLevel) {
context.setVariable("valueLineHeight", t_9);
}
if(frame.topLevel) {
context.addExport("valueLineHeight", t_9);
}
output += "\n";
var t_10;
t_10 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"label_content") || "Product Quality";
frame.set("labelContent", t_10, true);
if(frame.topLevel) {
context.setVariable("labelContent", t_10);
}
if(frame.topLevel) {
context.addExport("labelContent", t_10);
}
var t_11;
t_11 = (lineno = 14, colno = 32, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"label_font_color"),"light_font_color"]));
frame.set("labelFontColor", t_11, true);
if(frame.topLevel) {
context.setVariable("labelFontColor", t_11);
}
if(frame.topLevel) {
context.addExport("labelFontColor", t_11);
}
var t_12;
t_12 = (lineno = 15, colno = 31, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"label_font_size"),14]));
frame.set("labelFontSize", t_12, true);
if(frame.topLevel) {
context.setVariable("labelFontSize", t_12);
}
if(frame.topLevel) {
context.addExport("labelFontSize", t_12);
}
var t_13;
t_13 = (lineno = 16, colno = 33, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"label_font_weight"),500]));
frame.set("labelFontWeight", t_13, true);
if(frame.topLevel) {
context.setVariable("labelFontWeight", t_13);
}
if(frame.topLevel) {
context.addExport("labelFontWeight", t_13);
}
var t_14;
t_14 = (lineno = 17, colno = 33, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"label_line_height"),20]));
frame.set("labelLineHeight", t_14, true);
if(frame.topLevel) {
context.setVariable("labelLineHeight", t_14);
}
if(frame.topLevel) {
context.addExport("labelLineHeight", t_14);
}
output += "\n";
var t_15;
t_15 = runtime.contextOrFrameLookup(context, frame, "id");
frame.set("localClass", t_15, true);
if(frame.topLevel) {
context.setVariable("localClass", t_15);
}
if(frame.topLevel) {
context.addExport("localClass", t_15);
}
output += "\n<style>\n  .";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += " {\n    display: flex;\n    flex-direction: column;\n    align-items: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "align"), env.opts.autoescape);
output += ";\n    text-align: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "align"), env.opts.autoescape);
output += ";\n  }\n  .";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "__value {\n    display: flex;\n    align-items: center;\n    color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.contextOrFrameLookup(context, frame, "valueFontColor")), env.opts.autoescape);
output += ";\n    font-size: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "valueFontSize"), env.opts.autoescape);
output += "px;\n    font-weight: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "valueFontWeight"), env.opts.autoescape);
output += ";\n    line-height: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "valueLineHeight"), env.opts.autoescape);
output += "px;\n  }\n  .";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "__label {\n    color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.contextOrFrameLookup(context, frame, "labelFontColor")), env.opts.autoescape);
output += ";\n    font-size: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "labelFontSize"), env.opts.autoescape);
output += "px;\n    font-weight: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "labelFontWeight"), env.opts.autoescape);
output += ";\n    line-height: ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "labelLineHeight"), env.opts.autoescape);
output += "px;\n  }\n</style>\n\n<div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "\">\n  <div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "__value\">\n";
env.getExtension("RenderSnippet")["run"](context,"Shared: Rating star",runtime.makeKeywordArgs({"rating": runtime.contextOrFrameLookup(context, frame, "average_score"),"iconsCount": 1,"icon_name": "pointed","size": runtime.contextOrFrameLookup(context, frame, "valueFontSize"),"color": env.getFilter("get_color").call(context, runtime.contextOrFrameLookup(context, frame, "valueFontColor"))}), function(t_17,t_16) {
if(t_17) { cb(t_17); return; }
output += runtime.suppressValue(t_16, true && env.opts.autoescape);
output += "    <div>\n";
if(env.getFilter("float").call(context, runtime.contextOrFrameLookup(context, frame, "average_score")) >= 4.95) {
output += "        5\n";
;
}
else {
output += "        ";
output += runtime.suppressValue(env.getFilter("round").call(context, env.getFilter("float").call(context, runtime.contextOrFrameLookup(context, frame, "average_score")),1), env.opts.autoescape);
output += "\n";
;
}
output += "    </div>\n  </div>\n  <div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "__label\">\n    ";
output += runtime.suppressValue(env.getFilter("t").call(context, runtime.contextOrFrameLookup(context, frame, "labelContent"),{"keyPrefix": "shop.content"}), env.opts.autoescape);
output += "\n  </div>\n</div>\n";
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
});
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};
