function root(env, context, frame, runtime, cb) {
var lineno = 0;
var colno = 0;
var output = "";
try {
var parentTemplate = null;
var t_1;
t_1 = (lineno = 0, colno = 15, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "uid"), "uid", context, []));
frame.set("id", t_1, true);
if(frame.topLevel) {
context.setVariable("id", t_1);
}
if(frame.topLevel) {
context.addExport("id", t_1);
}
var t_2;
t_2 = runtime.memberLookup((runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"common")),"shopInfo")),"shop");
frame.set("shop", t_2, true);
if(frame.topLevel) {
context.setVariable("shop", t_2);
}
if(frame.topLevel) {
context.addExport("shop", t_2);
}
var t_3;
t_3 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"product");
frame.set("product", t_3, true);
if(frame.topLevel) {
context.setVariable("product", t_3);
}
if(frame.topLevel) {
context.addExport("product", t_3);
}
var t_4;
t_4 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "product")),"stock");
frame.set("stock", t_4, true);
if(frame.topLevel) {
context.setVariable("stock", t_4);
}
if(frame.topLevel) {
context.addExport("stock", t_4);
}
var t_5;
t_5 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"quantity");
frame.set("quantity", t_5, true);
if(frame.topLevel) {
context.setVariable("quantity", t_5);
}
if(frame.topLevel) {
context.addExport("quantity", t_5);
}
output += "\n";
var t_6;
t_6 = (lineno = 6, colno = 32, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"show_min_max_note"),true]));
frame.set("showMinMaxNote", t_6, true);
if(frame.topLevel) {
context.setVariable("showMinMaxNote", t_6);
}
if(frame.topLevel) {
context.addExport("showMinMaxNote", t_6);
}
var t_7;
t_7 = (lineno = 7, colno = 31, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "safe_get"), "safe_get", context, [runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"show_stock_info"),true]));
frame.set("showStockInfo", t_7, true);
if(frame.topLevel) {
context.setVariable("showStockInfo", t_7);
}
if(frame.topLevel) {
context.addExport("showStockInfo", t_7);
}
output += "\n";
var t_8;
t_8 = ["snippet-checkout-product-count"];
frame.set("globalClass", t_8, true);
if(frame.topLevel) {
context.setVariable("globalClass", t_8);
}
if(frame.topLevel) {
context.addExport("globalClass", t_8);
}
var t_9;
t_9 = runtime.contextOrFrameLookup(context, frame, "id");
frame.set("localClass", t_9, true);
if(frame.topLevel) {
context.setVariable("localClass", t_9);
}
if(frame.topLevel) {
context.addExport("localClass", t_9);
}
output += "\n<div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += " ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "\">\n  <div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += "__count-widget\">\n    <span\n      class=\"minus real unselectable\"\n      style=\"opacity: 0;\"\n      data-modifier=\"-1\"\n      data-stock-count-picker=\"1\"\n    >\n      <i class=\"fa-regular fa-minus\"></i>\n    </span>\n\n    <div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += "__input-wrapper unselectable\" data-input-wrapper=\"1\">\n      <input type=\"text\" value=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "quantity"), env.opts.autoescape);
output += "\" ";
output += runtime.suppressValue((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "product")),"quantity_min") == runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "product")),"quantity_max")?"disabled":""), env.opts.autoescape);
output += " />\n    </div>\n\n    <span\n      class=\"plus real unselectable\"\n      style=\"opacity: 0;\"\n      data-modifier=\"1\"\n      data-stock-count-picker=\"1\"\n    >\n      <i class=\"fa-regular fa-plus\"></i>\n    </span>\n  </div>\n\n";
if(runtime.contextOrFrameLookup(context, frame, "showStockInfo")) {
output += "    <div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += "__total-container\">\n      <div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += "__total-container unselectable\" data-total-value=\"1\"></div>\n    </div>\n";
;
}
output += "\n";
(function(cb) {if(runtime.contextOrFrameLookup(context, frame, "showMinMaxNote")) {
env.getExtension("RenderSnippet")["run"](context,"Product: MinMax note",runtime.makeKeywordArgs({"product": runtime.contextOrFrameLookup(context, frame, "product")}), function(t_11,t_10) {
if(t_11) { cb(t_11); return; }
output += runtime.suppressValue(t_10, true && env.opts.autoescape);
cb()});
}
else {
cb()}
})(function(t_12) {
if(t_12) { cb(t_12); return; }output += "</div>\n\n<script type='application/javascript'>\n  $(document).ready(function () {\n    const shopInfo = SellixContext.getShopInfo();\n    let hideStockCounter = shopInfo.shop && shopInfo.shop.hide_stock_counter;\n    const product = SellixContext.getShopProduct('";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "product")),"uniqid"), env.opts.autoescape);
output += "');\n\n    new SellixProductCountComponent(\n      '.";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "',\n      '";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "shop")),"name"), env.opts.autoescape);
output += "',\n      product,\n      ";
output += runtime.suppressValue(env.getFilter("safe").call(context, env.getFilter("dump").call(context, runtime.contextOrFrameLookup(context, frame, "renderOptions"))), env.opts.autoescape);
output += ",\n      hideStockCounter,\n    );\n  });\n</script>\n";
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
});
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};
