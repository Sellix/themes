function root(env, context, frame, runtime, cb) {
var lineno = 0;
var colno = 0;
var output = "";
try {
var parentTemplate = null;
var t_1;
t_1 = (lineno = 0, colno = 15, runtime.callWrap(runtime.contextOrFrameLookup(context, frame, "uid"), "uid", context, []));
frame.set("id", t_1, true);
if(frame.topLevel) {
context.setVariable("id", t_1);
}
if(frame.topLevel) {
context.addExport("id", t_1);
}
var t_2;
t_2 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "args")),"properties");
frame.set("properties", t_2, true);
if(frame.topLevel) {
context.setVariable("properties", t_2);
}
if(frame.topLevel) {
context.addExport("properties", t_2);
}
var t_3;
t_3 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "themeProperties")),"inputs");
frame.set("inputsProps", t_3, true);
if(frame.topLevel) {
context.setVariable("inputsProps", t_3);
}
if(frame.topLevel) {
context.addExport("inputsProps", t_3);
}
var t_4;
t_4 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"currencyConfig")),"multiCurrencyEnabled");
frame.set("multiCurrencyEnabled", t_4, true);
if(frame.topLevel) {
context.setVariable("multiCurrencyEnabled", t_4);
}
if(frame.topLevel) {
context.addExport("multiCurrencyEnabled", t_4);
}
var t_5;
t_5 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"currencyConfig")),"availableCurrencies");
frame.set("availableCurrencies", t_5, true);
if(frame.topLevel) {
context.setVariable("availableCurrencies", t_5);
}
if(frame.topLevel) {
context.addExport("availableCurrencies", t_5);
}
var t_6;
t_6 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"currencyConfig")),"allCurrencies");
frame.set("allCurrencies", t_6, true);
if(frame.topLevel) {
context.setVariable("allCurrencies", t_6);
}
if(frame.topLevel) {
context.addExport("allCurrencies", t_6);
}
var t_7;
t_7 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "allCurrencies")),runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"currencyConfig")),"default"));
frame.set("defaultCurrency", t_7, true);
if(frame.topLevel) {
context.setVariable("defaultCurrency", t_7);
}
if(frame.topLevel) {
context.addExport("defaultCurrency", t_7);
}
output += "\n";
var t_8;
t_8 = "snippet-currency-selector";
frame.set("globalClass", t_8, true);
if(frame.topLevel) {
context.setVariable("globalClass", t_8);
}
if(frame.topLevel) {
context.addExport("globalClass", t_8);
}
var t_9;
t_9 = runtime.contextOrFrameLookup(context, frame, "id");
frame.set("localClass", t_9, true);
if(frame.topLevel) {
context.setVariable("localClass", t_9);
}
if(frame.topLevel) {
context.addExport("localClass", t_9);
}
output += "\n";
if(runtime.contextOrFrameLookup(context, frame, "multiCurrencyEnabled") && (runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "availableCurrencies")),"length") > 1 || (runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "availableCurrencies")),"length") == 1 && runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "availableCurrencies")),0) != runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "defaultCurrency")),"name")))) {
output += "\n<style>\n  .";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += " .select2-container--sellix-currency-selector .select2-selection--single {\n    background-color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"select_background")), env.opts.autoescape);
output += "!important;\n  }\n\n  .";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += " .select2-container--sellix-currency-selector .select2-selection__rendered {\n    color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"common_font_color")), env.opts.autoescape);
output += ";\n    font-size: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"common_font_size"), env.opts.autoescape);
output += "px;\n    font-weight: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"common_font_weight"), env.opts.autoescape);
output += ";\n  }\n\n  .select2-container--sellix-currency-selector .select2-dropdown {\n    border: ";
output += runtime.suppressValue((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"dropdown_show_border")?"1px solid var(--borderColor)":"none"), env.opts.autoescape);
output += " !important;\n    background-color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"select_background")), env.opts.autoescape);
output += " !important;\n  }\n\n  .select2-container--sellix-currency-selector .select2-results__option {\n    font-size: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"dropdown_option_font_size"), env.opts.autoescape);
output += "px !important;\n    font-weight: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"dropdown_option_font_weight"), env.opts.autoescape);
output += ";\n    color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"dropdown_option_font_color")), env.opts.autoescape);
output += ";\n  }\n\n  .select2-container--sellix-currency-selector .select2-results__option.select2-results__option--highlighted {\n    background-color: ";
output += runtime.suppressValue(env.getFilter("get_color").call(context, runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "inputsProps")),"dropdown_option_background_hover")), env.opts.autoescape);
output += " !important;\n  }\n</style>\n\n<div class=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "globalClass"), env.opts.autoescape);
output += " ";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += " d-none position-relative\">\n  <select id=\"currency-selector\" class=\"\">\n";
frame = frame.push();
var t_12 = env.getFilter("sort").call(context, runtime.contextOrFrameLookup(context, frame, "availableCurrencies"),false,false,"title");
if(t_12) {t_12 = runtime.fromIterator(t_12);
var t_11 = t_12.length;
for(var t_10=0; t_10 < t_12.length; t_10++) {
var t_13 = t_12[t_10];
frame.set("currency", t_13);
frame.set("loop.index", t_10 + 1);
frame.set("loop.index0", t_10);
frame.set("loop.revindex", t_11 - t_10);
frame.set("loop.revindex0", t_11 - t_10 - 1);
frame.set("loop.first", t_10 === 0);
frame.set("loop.last", t_10 === t_11 - 1);
frame.set("loop.length", t_11);
var t_14;
t_14 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "allCurrencies")),t_13);
frame.set("currencyInfo", t_14, true);
if(frame.topLevel) {
context.setVariable("currencyInfo", t_14);
}
if(frame.topLevel) {
context.addExport("currencyInfo", t_14);
}
output += "      <option\n        value=\"";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "currencyInfo")),"name"), env.opts.autoescape);
output += "\"\n        ";
output += runtime.suppressValue((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "currencyInfo")),"name") == runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "defaultCurrency")),"name")?"selected":""), env.opts.autoescape);
output += "\n        data-img-url=\"";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "currencyInfo")),"imgUrl"), env.opts.autoescape);
output += "\"\n        data-currency-type=\"";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "currencyInfo")),"type"), env.opts.autoescape);
output += "\"\n        data-currency-smb=\"";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "currencyInfo")),"symbol"), env.opts.autoescape);
output += "\"\n      >";
output += runtime.suppressValue((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "currencyInfo")),"type") == "crypto"?runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "currencyInfo")),"title"):runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "currencyInfo")),"name")), env.opts.autoescape);
output += "</option>\n";
;
}
}
frame = frame.pop();
output += "  </select>\n</div>\n\n<script type='application/javascript'>\n  $(document).ready(function() {\n    let selectedCurrency = '";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "defaultCurrency")),"name"), env.opts.autoescape);
output += "';\n    let selectedType = '";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "defaultCurrency")),"type"), env.opts.autoescape);
output += "';\n\n    const optionFactory = (state, container, isResult) => {\n      const $element = $(state.element);\n      const $container = $(container);\n      const currencyType = $element.data('currencyType');\n      const currencySmb = $element.data('currencySmb');\n      const imgUrl = $element.data('imgUrl');\n\n      $container.attr('data-currency-type', currencyType);\n\n      if (!isResult && selectedType !== currencyType) {\n        $container.css('display', 'none');\n      }\n\n      if (!state.id) {\n        return state.text;\n      }\n\n      let isMobile = (window || {}).innerWidth < 768;\n      let title =  state.text;\n      const chevronSvg = `<svg style=\"min-width: 20px\" width=\"20\" height=\"20\" viewBox=\"0 0 21 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M5.5 12.5L10.5 7.5L15.5 12.5\" stroke=\"#555D67\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>`;\n\n      const tickSvg = `<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M4 10.1667L8 14.3333L16 6\" stroke=\"#6A3CE2\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n      </svg>`;\n\n      return $(`\n        <div style=\"display: flex; align-items: center; column-gap: 0.25rem;\">\n          ${isMobile\n            ? imgUrl\n              ? `<img alt=\"${title}\" style=\"height:18px;width: 18px;\" src=\"${imgUrl}\" />`\n              : ''\n            : imgUrl\n              ? `<img alt=\"${title}\" style=\"height:18px;width: 18px;\" src=\"${imgUrl}\" />`\n              : ''\n          }\n          ${isMobile && isResult ? '' : `${currencyType === 'fiat' ? `${currencySmb} ` : ''}${title}`}\n          ${isResult\n            ? chevronSvg\n            : state.id === selectedCurrency\n              ? tickSvg\n              : ''\n          }\n        </div>\n    `);\n    }\n\n    const toggleOptions = (activeType) => {\n      $('.select2-container--sellix-currency-selector .select2-currencies-tabs .select2-currency-tab')\n        .removeClass('active')\n      switch (activeType) {\n        case 'fiat':\n          $('#currency-tab-fiat-";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "id"), env.opts.autoescape);
output += "').addClass('active');\n          break;\n        case 'crypto':\n          $('#currency-tab-crypto-";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "id"), env.opts.autoescape);
output += "').addClass('active');\n          break;\n      }\n      $('.select2-container--sellix-currency-selector .select2-results__options [data-currency-type=\"fiat\"]')\n        .css('display', activeType === 'fiat' ? '' : 'none');\n\n      $('.select2-container--sellix-currency-selector .select2-results__options [data-currency-type=\"crypto\"]')\n        .css('display', activeType === 'crypto' ? '' : 'none');\n    }\n\n    $.fn.select2.amd.define(\"CustomDropdownAdapter\", [\n        \"select2/utils\",\n        \"select2/dropdown\",\n        \"select2/dropdown/attachBody\",\n        \"select2/dropdown/attachContainer\",\n        \"select2/dropdown/search\",\n        \"select2/dropdown/minimumResultsForSearch\",\n        \"select2/dropdown/closeOnSelect\",\n      ],\n      function(Utils, Dropdown, AttachBody, AttachContainer, Search, MinimumResultsForSearch, CloseOnSelect) {\n        // Decorate Dropdown with Search functionalities\n        let dropdownWithSearch = Utils.Decorate(Dropdown, Search);\n        dropdownWithSearch.prototype.render = function() {\n          // Copy and modify default search render method\n          const $rendered = Dropdown.prototype.render.call(this);\n          const $tabs = $(\n            '<span class=\"select2-currencies-tabs\">' +\n              '<a id=\"currency-tab-fiat-";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "id"), env.opts.autoescape);
output += "\" class=\"select2-currency-tab ";
output += runtime.suppressValue((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "defaultCurrency")),"type") === "fiat"?"active":""), env.opts.autoescape);
output += "\" href=\"javascript:void(0)\">Fiat</a>' +\n              '<a id=\"currency-tab-crypto-";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "id"), env.opts.autoescape);
output += "\" class=\"select2-currency-tab ";
output += runtime.suppressValue((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "defaultCurrency")),"type") === "crypto"?"active":""), env.opts.autoescape);
output += "\" href=\"javascript:void(0)\">Crypto</a>' +\n            '</span>'\n          );\n\n          $tabs.find('#currency-tab-fiat-";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "id"), env.opts.autoescape);
output += "').on('click', () => {\n            toggleOptions('fiat');\n          });\n\n          $tabs.find('#currency-tab-crypto-";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "id"), env.opts.autoescape);
output += "').on('click', () => {\n            toggleOptions('crypto');\n          });\n\n          this.$searchContainer = $tabs;\n          this.$search = $tabs.find('input');\n\n          $rendered.prepend($tabs);\n          return $rendered;\n        };\n\n        // Decorate the dropdown+search with necessary containers\n        let adapter = Utils.Decorate(dropdownWithSearch, AttachContainer);\n        adapter = Utils.Decorate(adapter, AttachBody);\n\n        return adapter;\n      });\n\n    $('#currency-selector').select2({\n      dropdownAutoWidth: true,\n      width: 'auto',\n      dropdownParent: $('.";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "'),\n      minimumResultsForSearch: Infinity,\n      templateSelection: (state, container) => optionFactory(state, container, true),\n      templateResult: (state, container) => optionFactory(state, container),\n      dropdownAdapter: $.fn.select2.amd.require(\"CustomDropdownAdapter\"),\n      escapeMarkup: (m) => m,\n      theme: 'sellix-currency-selector',\n    })\n      .on('select2:select', (e) => {\n        const $element = $(e.params.data.element);\n        selectedCurrency = e.params.data.id;\n        selectedType = $element.data('currencyType');\n        const oldCurrency = '";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "defaultCurrency")),"name"), env.opts.autoescape);
output += "';\n        const newCurrency = e.params.data.id;\n        if (oldCurrency !== newCurrency) {\n          let options = {\n            // domain: window.location.hostname,\n            path: '/',\n            sameSite: 'lax',\n          }\n          Cookies.set(`store-currency`, newCurrency, { ...options });\n          window.location.reload();\n        }\n      })\n      .on('select2:open', (e) => {\n        toggleOptions(selectedType);\n        $('.";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "').find('.select2-dropdown').addClass('animated flipIn');\n      })\n      .on('select2:closing', (e) => {\n        $('.";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "').find('.select2-dropdown').removeClass('animated flipIn');\n      });\n\n    setTimeout(() => {\n\n    });\n    $('.";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "localClass"), env.opts.autoescape);
output += "').removeClass('d-none');\n  });\n</script>\n\n";
;
}
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
;
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};
