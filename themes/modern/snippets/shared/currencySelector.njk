{% set id = uid() %}
{% set properties = args.properties %}
{% set inputsProps = themeProperties.inputs %}
{% set currencyItems = global.currencies.items %}
{% set defaultCurrency = global.currencies.default %}

{% set globalClass = 'snippet-currency-selector' %}
{% set localClass = id %}

<style>
  .{{ localClass  }} .select2-container--sellix-currency-selector .select2-selection--single {
    background-color: {{ inputsProps.select_background | get_color }}!important;
  }

  .{{ localClass  }} .select2-container--sellix-currency-selector .select2-selection__rendered {
    color: {{ inputsProps.common_font_color | get_color }};
    font-size: {{ inputsProps.common_font_size }}px;
    font-weight: {{ inputsProps.common_font_weight }};
  }

  .select2-container--sellix-currency-selector .select2-dropdown {
    border: {{ "1px solid var(--borderColor)" if inputsProps.dropdown_show_border else "none" }} !important;
    background-color: {{ inputsProps.select_background | get_color }} !important;
  }

  .select2-container--sellix-currency-selector .select2-results__option {
    font-size: {{ inputsProps.dropdown_option_font_size }}px !important;
    font-weight: {{ inputsProps.dropdown_option_font_weight }};
    color: {{ inputsProps.dropdown_option_font_color | get_color }};
  }

  .select2-container--sellix-currency-selector .select2-results__option.select2-results__option--highlighted {
    background-color: {{ inputsProps.dropdown_option_background_hover | get_color }} !important;
  }
</style>

<div class="{{ globalClass }} {{ localClass  }} d-none position-relative">
  <select id="currency-selector" class="">
    {% for currencyInfo in currencyItems | sort(false, false, 'title') %}
      <option
        value="{{ currencyInfo.name }}"
        {{ 'selected' if currencyInfo.key == defaultCurrency.key }}
        data-img-url="{{ currencyInfo.imgUrl }}"
        data-currency-type="{{ currencyInfo.type }}"
      >
        {{- currencyInfo.title -}}
      </option>
    {% endfor %}
  </select>
</div>

<script type='application/javascript'>
  $(document).ready(function() {
    let isTypeInited = false;
    let selectedCurrency = '{{ defaultCurrency.key }}';
    let selectedType = '{{ defaultCurrency.type }}';
    const optionFactory = (state, container, isResult) => {
      const $element = $(state.element);
      const $container = $(container);
      const currencyType = $element.data('currencyType');
      const imgUrl = $element.data('imgUrl');

      $container.attr('data-currency-type', currencyType);

      if (!state.id) {
        return state.text;
      }

      let isMobile = (window || {}).innerWidth < 768;
      let title =  state.text;
      const chevronSvg = `<svg class="ml-2" style="min-width: 21px" width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M5.5 12.5L10.5 7.5L15.5 12.5" stroke="#555D67" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>`;

      const tickSvg = `<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M4 10.1667L8 14.3333L16 6" stroke="#6A3CE2" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>`;

      // if (!isResult && selectedType !== currencyType) {
      //   return null;
      // }

      console.log('Currency Key', state.id, selectedCurrency);
      return $(`
        <div style="display: flex; align-items: center;">
          ${isMobile
        ? imgUrl
          ? `<img alt="${title}" style="height:18px;width: 18px;" class="mr-2" src="${imgUrl}" />`
          : ''
        : !isResult && imgUrl
          ? `<img alt="${title}" style="height:18px;width: 18px;" class="mr-2" src="${imgUrl}" />`
          : ''
      }
          ${isMobile && isResult ? '' : title}
          ${isResult
        ? chevronSvg
        : state.id === selectedCurrency
          ? tickSvg
          : ''
      }
        </div>
    `);
    }

    const toggleOptions = (activeType) => {
      $('.select2-container--sellix-currency-selector .select2-currencies-tabs .select2-currency-tab')
        .removeClass('active')
      switch (activeType) {
        case 'fiat':
          $('#currency-tab-fiat-{{ id }}').addClass('active');
          break;
        case 'crypto':
          $('#currency-tab-crypto-{{ id }}').addClass('active');
          break;
      }
      $('.select2-container--sellix-currency-selector .select2-results__options [data-currency-type="fiat"]')
        .css('display', activeType === 'fiat' ? '' : 'none');
      $('.select2-container--sellix-currency-selector .select2-results__options [data-currency-type="crypto"]')
        .css('display', activeType === 'crypto' ? '' : 'none');
    }

    $.fn.select2.amd.define("CustomDropdownAdapter", [
        "select2/utils",
        "select2/dropdown",
        "select2/dropdown/attachBody",
        "select2/dropdown/attachContainer",
        "select2/dropdown/search",
        "select2/dropdown/minimumResultsForSearch",
        "select2/dropdown/closeOnSelect",
      ],
      function(Utils, Dropdown, AttachBody, AttachContainer, Search, MinimumResultsForSearch, CloseOnSelect) {
        // Decorate Dropdown with Search functionalities
        let dropdownWithSearch = Utils.Decorate(Dropdown, Search);
        dropdownWithSearch.prototype.render = function() {
          // Copy and modify default search render method
          const $rendered = Dropdown.prototype.render.call(this);
          const $tabs = $(
            '<span class="select2-currencies-tabs">' +
              '<a id="currency-tab-fiat-{{ id }}" class="select2-currency-tab {{ 'active' if defaultCurrency.type === 'fiat' }}" href="javascript:void(0)">Fiat</a>' +
              '<a id="currency-tab-crypto-{{ id }}" class="select2-currency-tab {{ 'active' if defaultCurrency.type === 'crypto' }}" href="javascript:void(0)">Crypto</a>' +
            '</span>'
          );

          $tabs.find('#currency-tab-fiat-{{ id }}').on('click', () => {
            toggleOptions('fiat');
          });

          $tabs.find('#currency-tab-crypto-{{ id }}').on('click', () => {
            toggleOptions('crypto');
          });

          this.$searchContainer = $tabs;
          this.$search = $tabs.find('input');

          $rendered.prepend($tabs);
          return $rendered;
        };

        // Decorate the dropdown+search with necessary containers
        let adapter = Utils.Decorate(dropdownWithSearch, AttachContainer);
        adapter = Utils.Decorate(adapter, AttachBody);

        return adapter;
      });

    $('#currency-selector').select2({
      dropdownAutoWidth: true,
      width: 'auto',
      dropdownParent: $('.{{ localClass  }}'),
      minimumResultsForSearch: Infinity,
      templateSelection: (state, container) => optionFactory(state, container, true),
      templateResult: (state, container) => optionFactory(state, container),
      dropdownAdapter: $.fn.select2.amd.require("CustomDropdownAdapter"),
      escapeMarkup: (m) => m,
      theme: 'sellix-currency-selector',
    })
      .on('select2:select', (e) => {
        console.log(e.params.data.id);
        selectedCurrency = e.params.data.id;
        const oldCurrency = '{{ defaultCurrency.key }}';
        const newCurrency = e.params.data.id;
        if (oldCurrency !== newCurrency) {
          let options = {
            domain: window.location.hostname,
            path: '/',
            sameSite: 'lax',
          }
          Cookies.set(`store-currency`, newCurrency, { ...options });
          window.location.reload();
        }
      })
      .on('select2:open', (e) => {
        $('.{{ localClass  }}').find('.select2-dropdown').addClass('animated flipIn');

        console.log('Items', $('#currency-tab-{{ defaultCurrency.type }}-{{ id }}'));
        if (!isTypeInited) {
          isTypeInited = true;
          $('#currency-tab-{{ defaultCurrency.type }}-{{ id }}').trigger('click');
        }
      })
      .on('select2:closing', (e) => {
        $('.{{ localClass  }}').find('.select2-dropdown').removeClass('animated flipIn');
      });

    setTimeout(() => {

    });
    $('.{{ localClass  }}').removeClass('d-none');
  });
</script>
