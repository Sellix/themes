{% set id = uid() %}
{% set shopInfo = global.common.shopInfo %}
{% set shop = shopInfo.shop %}
{% set categories = shopInfo.categories %}
{% set colors = themeProperties.current_colors %}
{% set inputsProps = themeProperties.inputs %}

{% set filterName = properties.filter_name %}

{% set localClass = id %}

<style>
  .{{ localClass}}__container {
    {% if properties.container_background_color %}background: {{ colors[properties.container_background_color] }};{% endif %}
    border: {% if properties.show_border %}1px solid var(--borderColor){% else %}none{% endif %};
    box-shadow: {{ properties.container_shadow }};
    border-radius: {{ properties.container_border_radius }}rem;
    {% if properties.container_padding %}padding: {{ properties.container_padding }}px;{% endif %}
  }

  .{{ localClass}}__search input {
    border-radius: .5rem;
    padding: 0rem 1rem 0rem 2.75rem;
    font-size: {{ inputsProps.common_font_size }}px;
    font-weight: {{ inputsProps.common_font_weight }};
    color: {{ colors[inputsProps.common_font_color] }};
    background-color: {{ colors[properties.input_background_color] }};
    background-color: var(--backgroundAccentLight);
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    border: {{ "1px solid var(--borderColor)" if inputsProps.common_show_border else "none" }};
    box-shadow: 0px 1px 2px 0px rgba(18, 20, 23, 0.06);
    width: 100%;
    height: {{ inputsProps.common_height }}px;
    font-family: inherit;
  }

  .{{ localClass }}__search input:focus {
    outline: none;
    border: {{ "1px solid var(--brandColor)" if inputsProps.common_show_border else "none" }};
  }

  .{{ localClass }}__search input::placeholder {
    opacity: 0.7;
    font-size: {{ inputsProps.common_font_size }}px;
    font-weight: {{ inputsProps.common_font_weight }};
    color: {{ colors[inputsProps.common_font_color] }};
  }

  .{{ localClass }}__search .shop-search-icon {
    color: {{ colors[inputsProps.common_font_color] }} !important;
  }

  {{ localClass }}__categories-dropdown select {
    background: {{ colors[inputsProps.select_background] }}
  }

  .sellix-dropdown .select2-container--sellix {
    width: 100%!important;
    cursor: pointer;
  }

  .sellix-dropdown .select2-container--sellix .select2-selection--single {
    display: flex;
    align-items: center;
    justify-content: space-between;
    min-height: {{ inputsProps.common_height }}px;
    background-color: {{ colors[properties.input_background_color] }};
    background-color: var(--backgroundAccentLight);
    box-shadow: 0px 1px 2px 0px rgba(18, 20, 23, 0.06);
    border-radius: 0.5rem;
    border: {{ "1px solid var(--borderColor)" if inputsProps.common_show_border else "none" }};
  }

  .sellix-dropdown .select2-container--sellix .select2-selection__rendered {
    padding-left: 1rem !important;
    padding-right: 1rem !important;
    color: {{ colors[inputsProps.common_font_color] }};
    font-size: {{ inputsProps.common_font_size }}px;
    font-weight: {{ inputsProps.common_font_weight }};
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline;
    width: 100%;
  }

  .sellix-dropdown {
    position: relative;
  }
  .sellix-dropdown .select2-container--sellix .select2-selection__arrow b:before {
    position: relative;
    content: '';
    display: inline-block;
    width: 0.4em;
    height: 0.4em;
    border-right: 0.2em solid var(--thinColor);
    border-top: 0.2em solid var(--thinColor);
    transform: rotate(135deg);
    margin-right: 0.5em;
  }

  .select2-container--sellix .select2-dropdown {
    border: {{ "1px solid var(--borderColor)" if inputsProps.dropdown_show_border else "none" }} !important;
    margin-top: 8px;
    margin-bottom: 8px;
    box-shadow: none;
    border-radius: 4px !important;
    padding-top: 4px;
    padding-bottom: 4px;
    background-color: {{ colors[properties.input_background_color] }} !important;
  }

  .select2-container--sellix .select2-results__option {
    font-size: {{ inputsProps.dropdown_option_font_size }}px !important;
    font-weight: {{ inputsProps.dropdown_option_font_weight }};
    color: {{ colors[inputsProps.dropdown_option_font_color] }} !important;
    padding: 0 1rem !important;
    display: flex !important;
    align-items: center;
    height: {{ inputsProps.common_height }}px;
  }

  .select2-container--sellix .select2-results__option.select2-results__option--highlighted {
    background-color: {{ colors[inputsProps.dropdown_option_background_hover] }} !important;
  }

  .select2-container--sellix .select2-results__option[aria-selected='true'] {
    background-color: {{ colors[inputsProps.dropdown_active_option_background] }} !important;
    color: {{ colors[inputsProps.dropdown_active_option_font_color] }} !important;
  }
</style>

<div class="{{ globalClass }}__container {{ localClass }}__container">
  {% if shop.search_enabled %}
    <label for="shop-search-{{id}}" class="{{ globalClass }}__item {{ globalClass }}__search {{ localClass }}__search">
      <svg class="shop-search-icon" width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M7.80469 13.2C10.7042 13.2 13.0547 10.8494 13.0547 7.94995C13.0547 5.05046 10.7042 2.69995 7.80469 2.69995C4.90519 2.69995 2.55469 5.05046 2.55469 7.94995C2.55469 10.8494 4.90519 13.2 7.80469 13.2Z" stroke="#555D67" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        <path d="M15.4594 14.85L11.8594 11.25" stroke="#555D67" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
      <input
        type="text"
        id="shop-search-{{id}}"
        value=""
        placeholder="{{ 'shop.main.productList.filter.placeholder' | t }}"
      />
    </label>
  {% endif %}

  {% if categories | length %}
    <div id="category-select-{{id}}" class="sellix-dropdown {{ globalClass }}__item {{ globalClass }}__categories-dropdown {{ localClass }}__categories-dropdown d-none">
      <select id="category-select" class="category-select"></select>
    </div>
  {% endif %}

  {% if shop.sort_enabled %}
    <div id="sort-select-{{id}}" class="sellix-dropdown {{ globalClass }}__item {{ globalClass }}__sort-dropdown {{ globalClass }}__local-dropdown d-none">
      <select id="sort-select" class="sort-select">
        <option value="DEFAULT">{{ 'shop.main.productList.filter.default' | t }}</option>
        <option value="PRICE">{{ 'shop.main.productList.filter.price' | t }}</option>
        <option value="NAME">{{ 'shop.main.productList.filter.name' | t }}</option>
        <option value="TYPE">{{ 'shop.main.productList.filter.type' | t }}</option>
        <option value="STOCK">{{ 'shop.main.productList.filter.stock' | t }}</option>
      </select>
    </div>
  {% endif %}
</div>

<script type='application/javascript'>
  $(document).ready(function () {

    function optionFactory(state, isResult, isSort) {

      if (isSort && state.id) {
        return $(`
            <div style="display: flex; align-items: center; justify-content: space-between;">
              {{ 'shop.main.productList.filter.indexBy' | t }}: ${state.text}
              ${isResult ? `
                <svg style="margin-left: 5px; min-width: 21px" width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M5.5 12.5L10.5 7.5L15.5 12.5" stroke="#555D67" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              ` : ''}
            </div>
        `);
      }

      return $(`
        <div style="display: flex; align-items: center; justify-content: space-between;">
          ${state.text}
          ${isResult ? `
            <svg style="margin-left: 5px; min-width: 21px" width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M5.5 12.5L10.5 7.5L15.5 12.5" stroke="#555D67" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          ` : ''}
        </div>
    `);
    }

    $('.{{ globalClass }}__item').removeClass('d-none');

    let search = '', category = 'all', sort = 'DEFAULT';

    $('.block-product-list-items__empty-container button').on('click', () => {
      $('#shop-search-{{id}}').val('').trigger('keyup');
      $('#category-select-{{id}}').val('all');
      $('#category-select-{{id}}').trigger('change');
    });

    $('#shop-search-{{id}}').on('keyup', function (e) {
      search = e.target.value;
      $(document).trigger(
        'SellixProductListFilterChangeEvent',
        { name: '{{ filterName }}', search, category, sort },
      );
    });

    $('#category-select').select2({
      data: [
        {
          text: "{{ 'shop.main.productList.filter.allCategories' | t }}",
          id: "all",
        },
        {% for category in categories %}
          {% if not category.unlisted %}
          {
            text: "{{category.title}}",
            id: "{{category.uniqid}}"
          },
          {% endif %}
        {% endfor %}
      ],
      minimumResultsForSearch: -1,
      theme: 'sellix',

      dropdownAutoWidth: true,
      width: 'auto',
      dropdownParent: $('#category-select-{{id}}'),
      templateSelection: (state) => optionFactory(state, true, false),
      templateResult: (state) => optionFactory(state, false, false),
      escapeMarkup: (m) => m,
    })
      .on('change', (e) => {
        category = e.target.value;
        $(document).trigger('SellixProductListFilterChangeEvent', { name: '{{ filterName }}', search, category, sort });
      })
      .on('select2:open', (e) => {
        $('#category-select-{{ id }}').find('.select2-dropdown').addClass('animated ' + 'flipIn');
      })
      .on('select2:closing', (e) => {
        $('#category-select-{{ id }}').find('.select2-dropdown').removeClass('animated ' + 'flipIn');
      });

    $('#sort-select').select2({
      dropdownAutoWidth: true,
      width: 'auto',
      dropdownParent: $('#sort-select-{{id}}'),
      templateSelection: (state) => optionFactory(state, true, true),
      templateResult: (state) => optionFactory(state, false, false),
      escapeMarkup: (m) => m,
      minimumResultsForSearch: -1,
      theme: 'sellix',
    })
      .on('change', (e) => {
        sort = e.target.value;
        $(document).trigger(
          'SellixProductListFilterChangeEvent',
          { name: '{{ filterName }}', search, category, sort },
        );
      })
      .on('select2:open', (e) => {
        $('#sort-select-{{ id }}').find('.select2-dropdown').addClass('animated ' + 'flipIn');
      })
      .on('select2:closing', (e) => {
        $('#sort-select-{{ id }}').find('.select2-dropdown').removeClass('animated ' + 'flipIn');
      });

    setTimeout(function() {
      {% if global.request.type === 'category' %}
        $('#category-select-{{id}}').val('{{ global.request.options.itemId }}');
        $('#category-select-{{id}}').trigger('change');
      {% endif %}

      $('#sort-select-{{id}}').val('{{ shop.default_sort }}');
      $('#sort-select-{{id}}').trigger('change');
    }, 0);
  });
</script>
