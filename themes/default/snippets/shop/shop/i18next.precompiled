function root(env, context, frame, runtime, cb) {
var lineno = 0;
var colno = 0;
var output = "";
try {
var parentTemplate = null;
output += "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/i18next/22.4.9/i18next.min.js\"></script>\n\n<script type='application/javascript'>\n  const localesConfig = window.SellixContext.get('locales');\n  window.sellixI18Next = i18next.createInstance({\n    lng: localesConfig.locale,\n    fallbackLng: localesConfig.fallbackLocales,\n    lowerCaseLng: true,\n    resources: Object.fromEntries(Object.keys(localesConfig.resources).map(( locale ) => {\n      return [\n        locale,\n        {\n          translation: localesConfig.resources[locale],\n        }\n      ]\n    })),\n  }, function(err, t) {\n  });\n</script>\n";
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
;
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};
