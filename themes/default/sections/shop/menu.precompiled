function root(env, context, frame, runtime, cb) {
var lineno = 0;
var colno = 0;
var output = "";
try {
var parentTemplate = null;
var t_1;
t_1 = runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"request")),"slug");
frame.set("slug", t_1, true);
if(frame.topLevel) {
context.setVariable("slug", t_1);
}
if(frame.topLevel) {
context.addExport("slug", t_1);
}
var t_2;
t_2 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "themeProperties")),"current_colors");
frame.set("colors", t_2, true);
if(frame.topLevel) {
context.setVariable("colors", t_2);
}
if(frame.topLevel) {
context.addExport("colors", t_2);
}
var t_3;
t_3 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "themeProperties")),"menu");
frame.set("menuProps", t_3, true);
if(frame.topLevel) {
context.setVariable("menuProps", t_3);
}
if(frame.topLevel) {
context.addExport("menuProps", t_3);
}
output += "\n";
if(runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"locales")),"defaultLocale") != runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"locales")),"locale")) {
var t_4;
t_4 = env.getFilter("join").call(context, ["/",runtime.memberLookup((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "global")),"locales")),"locale")]);
frame.set("locale_prefix", t_4, true);
if(frame.topLevel) {
context.setVariable("locale_prefix", t_4);
}
if(frame.topLevel) {
context.addExport("locale_prefix", t_4);
}
;
}
else {
var t_5;
t_5 = "";
frame.set("locale_prefix", t_5, true);
if(frame.topLevel) {
context.setVariable("locale_prefix", t_5);
}
if(frame.topLevel) {
context.addExport("locale_prefix", t_5);
}
;
}
output += "\n<style>\n  .menu-tab.active {\n    color: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "colors")),runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menuProps")),"menu_active_tab_font_color")), env.opts.autoescape);
output += " !important;\n    border-bottom-color: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "colors")),runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menuProps")),"menu_active_tab_font_color")), env.opts.autoescape);
output += ";\n    font-size: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menuProps")),"menu_active_tab_font_size"), env.opts.autoescape);
output += "px !important;\n    font-weight: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menuProps")),"menu_active_tab_font_weight"), env.opts.autoescape);
output += " !important;\n    background: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "colors")),runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menuProps")),"menu_active_tab_background")), env.opts.autoescape);
output += ";\n    border-radius: 0.25rem 0.25rem 0 0;\n    position: relative;\n  }\n</style>\n\n<div class=\"sellix-menu\">\n";
frame = frame.push();
var t_8 = runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menu")),"items");
if(t_8) {t_8 = runtime.fromIterator(t_8);
var t_7 = t_8.length;
for(var t_6=0; t_6 < t_8.length; t_6++) {
var t_9 = t_8[t_6];
frame.set("item", t_9);
frame.set("loop.index", t_6 + 1);
frame.set("loop.index0", t_6);
frame.set("loop.revindex", t_7 - t_6);
frame.set("loop.revindex0", t_7 - t_6 - 1);
frame.set("loop.first", t_6 === 0);
frame.set("loop.last", t_6 === t_7 - 1);
frame.set("loop.length", t_7);
var t_10;
t_10 = runtime.memberLookup((t_9),"page_slug") == runtime.contextOrFrameLookup(context, frame, "slug");
frame.set("active", t_10, true);
if(frame.topLevel) {
context.setVariable("active", t_10);
}
if(frame.topLevel) {
context.addExport("active", t_10);
}
if(runtime.memberLookup((t_9),"page_slug") != "/") {
var t_11;
t_11 = runtime.inOperator(runtime.memberLookup((t_9),"page_slug"),runtime.contextOrFrameLookup(context, frame, "slug"));
frame.set("active", t_11, true);
if(frame.topLevel) {
context.setVariable("active", t_11);
}
if(frame.topLevel) {
context.addExport("active", t_11);
}
;
}
if(runtime.memberLookup((t_9),"page_slug") == "/contact" && runtime.inOperator("/ticket",runtime.contextOrFrameLookup(context, frame, "slug"))) {
var t_12;
t_12 = true;
frame.set("active", t_12, true);
if(frame.topLevel) {
context.setVariable("active", t_12);
}
if(frame.topLevel) {
context.addExport("active", t_12);
}
;
}
output += "      <a\n        href=\"";
output += runtime.suppressValue(runtime.contextOrFrameLookup(context, frame, "locale_prefix"), env.opts.autoescape);
output += runtime.suppressValue(runtime.memberLookup((t_9),"page_slug"), env.opts.autoescape);
output += "\"\n        class=\"menu-tab ";
output += runtime.suppressValue((runtime.contextOrFrameLookup(context, frame, "active")?"active":""), env.opts.autoescape);
output += "\"\n        style=\"font-size: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menuProps")),"menu_tab_font_size"), env.opts.autoescape);
output += "px; color: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "colors")),runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menuProps")),"menu_tab_font_color")), env.opts.autoescape);
output += "; font-weight: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "menuProps")),"menu_tab_font_weight"), env.opts.autoescape);
output += ";\"\n      >\n        ";
output += runtime.suppressValue(env.getFilter("t").call(context, runtime.memberLookup((t_9),"title")), env.opts.autoescape);
output += "\n      </a>\n";
;
}
}
frame = frame.pop();
output += "</div>\n";
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
;
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};
