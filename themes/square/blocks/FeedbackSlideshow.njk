{% set shop = global.common.shopInfo.shop %}
{% set feedbacks = global.common.feedbacksInfo.feedbacks %}
{% set offset = args.offset if args.offset else 0 %}
{% set limit = safe_get(args.limit, safe_get(properties.page_size, 2)) %}
{% set isEmpty = feedbacks | length == 0 %}

{% set bgColor = safe_get(properties.background_color, 'background_accent_light') %}
{% set showBorder = safe_get(properties.show_border, false) %}
{% set paddingVert = safe_get(properties.padding_vert, 0) %}
{% set paddingHoriz = safe_get(properties.padding_horiz, 0) %}
{% set shadow = safe_get(properties.shadow, 'none') %}
{% set borderRadius = safe_get(properties.border_radius, 0) %}

{% set itemsPerRowDesktop = 1 if isEmpty else safe_get(properties.items_per_row_desktop, 3) | int %}
{% set itemsPerRowTablet = 1 if isEmpty else safe_get(properties.items_per_row_tablet, 2) | int %}
{% set itemsPerRowMobile = 1 if isEmpty else safe_get(properties.items_per_row_mobile, 1) | int %}

{% set localClass = id %}

<style>.swiper-feedback-container {
  display: flex;
  justify-content: center;
  align-items: center;
  max-width: 100%;
  overflow: hidden;
}

.feedbacks-list {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  z-index: 2;
  width: 100%;
  max-width: 100%;
}

.feedbacks-list .swiper-wrapper {
  display: flex;
  width: 100%;
  height: 300px;
}

.feedbacks-list .swiper-slide {
  border-radius: 0px;
  position: relative;
  overflow: hidden;
}

.feedbacks-list .swiper-slide .snippet-feedback-card {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to top, #0f2027, transparent, transparent);
  background-size: cover;
}

</style>
<div class="{{ globalClass }}__container {{ localClass }}__container feedbacks-list">
  <div class="swiper-wrapper">
    {% if isEmpty %}
    <div class="empty-message-container {{ globalClass }}__empty">
      {% render_snippet 'Icons: No feedback' %}

      <span class="empty-message-title {{ globalClass }}__empty-title">
        <b>{{ 'shop.feedback.noFeedbacks' | t({shopName: shop.name}) }}</b>
      </span>
      <span class="empty-message-subtitle {{ globalClass }}__empty-title">
        {{ 'shop.feedback.noFeedbacksSubtitle' | t }}
      </span>
    </div>
    {% endif %}

    {% for item in feedbacks %}
      <div class="swiper-slide">
        {% render_snippet 'Feedback: Card', feedback=item %}
      </div>
    {% endfor %}
  </div>
</div>

{% if (settings.group_names_to_hide or settings.group_name) and isEmpty %}
<script type="application/javascript">
  const event = new CustomEvent('SellixHideGroupEvent', {
    detail: { groupName: '{{ settings.group_names_to_hide or settings.group_name }}' }
  });
  document.dispatchEvent(event);
</script>
{% endif %}

<script type="application/javascript">
  document.addEventListener('DOMContentLoaded', function() {
  var swiper = new Swiper('.feedbacks-list', {
    direction: 'horizontal',
    grabCursor: true,
    speed: 500,
    
    slidesPerView: {{ itemsPerRowMobile }},
    spaceBetween: 0,

    breakpoints: {
      // Tablet settings (>= 768px)
      768: {
        slidesPerView: {{ itemsPerRowTablet }},
        spaceBetween: 20,
      },
      // Desktop settings (>= 1024px)
      1024: {
        slidesPerView: {{ itemsPerRowDesktop }},
        spaceBetween: 30,
      }
    }
  });
});
</script>