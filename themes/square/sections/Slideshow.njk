{% set localClass = id %}
<div class="{{ localClass }}__slider swiper-slider-container">
  <div class="swiper-wrapper">
    <!-- Virtual Slides -->
  </div>

  {% if properties.showPagination %}
    <div class="swiper-pagination swiper-pagination-vertical"></div>
  {% endif %}

  {% if properties.showThumbs %}
    <div class="{{ localClass }}__thumbs swiper-slider-container__gallery-thumbs d-sm-none d-lg-flex col-12">
      <div class="swiper-wrapper">
          {% for block_name in settings.block_order %}
            {%- render_block block_name -%}
            <div class="swiper-next-icon">
              {% render_snippet 'IconsNextSlide' %}
            </div>
          {% endfor %}
      </div>
    </div>
  {% endif %}
</div>

<script type="application/javascript">

  var {{ localClass }}__virtualSlides = [];
  {% for block_name in settings.block_order %}
      {{ localClass }}__virtualSlides.push(`{% render_block block_name %}`);
  {% endfor %}

  var galleryThumbs;
  {% if properties.showThumbs %}
    galleryThumbs = new Swiper(".{{ localClass }}__thumbs", {
      slidesPerView: 'auto',
      watchSlidesVisibility: true,
      watchSlidesProgress: true,
      preloadImages: false,
    });
  {% endif %}

  var galleryMain = new Swiper('.{{ localClass }}__slider', {
    preventInteractionOnTransition: true,
    loop: false,
    speed: 1500,
    lazy: {
      loadPrevNext: false,
      loadOnTransitionStart: true,
    },
    virtual: {
      slides: {{ localClass }}__virtualSlides,
      renderSlide: function (slide, index) {
        return slide;
      }
    },
    autoplay: {
      delay: 5000,
      disableOnInteraction: true,
    },
    {% if properties.showThumbs %}
      thumbs: {
        swiper: galleryThumbs,
      },
    {% endif %}
    {% if properties.showPagination %}
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
        renderBullet: function (index, className) {
          const formattedNumber = (index + 1).toString().padStart(2, '0');
          return `<span class="${className}">${formattedNumber}</span>`;
        }
      },
    {% endif %}
    on: {
      slideChangeTransitionStart: function () {
        toggleSlideElements(this.slides[this.previousIndex], this.slides[this.activeIndex + 1]);
      },
      slideChangeTransitionEnd: function () {
        animateCurrentSlide(this.slides[this.activeIndex]);
      }
    }
  });

  function toggleSlideElements(prevSlide, nextSlide) {
    if (prevSlide) toggleImageText(prevSlide, false);
    if (nextSlide) toggleImageText(nextSlide, false);
  }

  function animateCurrentSlide(currentSlide) {
    if (currentSlide) {
      toggleImageText(currentSlide, true);
      animateSlideBackground(currentSlide);
    }
  }

</script>
