{% set id = uid() %}
{% set properties = args.properties %}
{% set shopInfo = global.common.shopInfo %}
{% set shop = shopInfo.shop %}
{% set product = args.product %}
{% set isPlaceholder = not product.image_name %}
{% set placeholderType = safe_get(properties.placeholder_type, undefined) %}
{% set isLicense = product.licensing_enabled %}
{% set image = cdn_link(product.cloudflare_image_id, 'shopItem') %}
{% set onHold = product.on_hold | int %}
{% set isOut = (product.stock | int === 0) %}
{% set isPayWhatYouWant = product.pay_what_you_want %}
{% set isFree = product.price_display | float === 0 and not isPayWhatYouWant %}
{% set cardProps = themeProperties.cards %}
{% set showBadge = safe_get(properties.show_product_type_badge, true) %}

{% set showStockInfo = safe_get(themeProperties.common.show_stock_info, false) %}
{% set hideStockCounter = shop.hide_stock_counter %}

{% set background = safe_get(properties.background_color, cardProps.product_card_background_color) %}
{% set border = '1px solid var(--borderColor)' if safe_get(properties.show_border, cardProps.product_card_show_border) else 'none' %}
{% set borderRadius = safe_get(properties.border_radius, cardProps.product_card_border_radius) %}
{% set shadow = safe_get(properties.shadow, cardProps.product_card_shadow) %}
{% set imageBorderRadius = safe_get(properties.image_border_radius, cardProps.product_card_image_border_radius) %}
{% set imageHeight = safe_get(properties.image_height, cardProps.product_card_image_height) %}
{% set infoPaddingHoriz = safe_get(properties.info_padding_horiz, cardProps.product_card_info_padding_horiz) %}
{% set infoPaddingVert = safe_get(properties.info_padding_vert, cardProps.product_card_info_padding_vert) %}

{% set titleFontcolor = safe_get(properties.title_font_color, cardProps.product_card_title_font_color) %}
{% set titleFontSize = safe_get(properties.title_font_size, cardProps.product_card_title_font_size) %}
{% set titleFontWeight = safe_get(properties.title_font_weight, cardProps.product_card_title_font_weight) %}
{% set titleLineHeight = safe_get(properties.title_line_height, cardProps.product_card_title_line_height) %}
{% set titleTextAlign = safe_get(properties.title_text_align, cardProps.product_card_title_text_align) %}

{% set descriptionFontColor = safe_get(properties.description_font_color, cardProps.product_card_description_font_color) %}
{% set descriptionFontSize = safe_get(properties.description_font_size, cardProps.product_card_description_font_size) %}
{% set descriptionFontWeight = safe_get(properties.description_font_weight, cardProps.product_card_description_font_weight) %}

{% set priceFontColor = safe_get(properties.price_font_color, cardProps.product_card_price_font_color) %}
{% set priceFontSize = safe_get(properties.price_font_size, cardProps.product_card_price_font_size) %}
{% set priceFontWeight = safe_get(properties.price_font_weight, cardProps.product_card_price_font_weight) %}

{% set priceProperties = {
  price_font_color: priceFontColor,
  price_font_weight: priceFontWeight,
  price_font_size: priceFontSize
} %}

{% set globalClass = 'snippet-product-card' %}
{% set localClass = id %}

<style>
  .{{ localClass }}__container {
    border: {{ border }};
    border-radius: {{ borderRadius }}px;
    box-shadow: {{ shadow }};
  }

  .{{ localClass }}__container:hover {
    border: 1px solid var(--brandColor);
  }

  .{{ localClass }}__card {
    background: {{ background | get_color }};
  }
  .{{ localClass }}__title {
    color: {{ titleFontcolor | get_color }};
    font-size: {{ titleFontSize }}px;
    font-weight: {{ titleFontWeight }};
    line-height: {{ titleLineHeight }}px;
  }
  .{{ localClass }}__info {
    padding: {{ infoPaddingVert }}px {{ infoPaddingHoriz }}px;
  }
  .{{ localClass }}__description {
    color: {{ descriptionFontColor | get_color }};
    font-size: {{ descriptionFontSize }}px;
    font-weight: {{ descriptionFontWeight }};
  }
  .{{ localClass }}__price-with-discount {
    color: {{ priceFontColor | get_color }};
    font-size: {{ priceFontSize }}px;
    font-weight: {{ priceFontWeight }};
  }

  .{{ localClass }}__price-with-discount i {
    color: var(--lightFontColor);
    font-size: {{ priceFontSize }}px;
    font-weight: 400;
  }

  .{{ localClass }}__price {
    color: {{ priceFontColor | get_color }};
    font-size: {{ priceFontSize }}px;
    font-weight: {{ priceFontWeight }};
  }
  .{{ localClass }}__image {
    min-height: {{ imageHeight }}px;
    height: {{ imageHeight }}px;
  }
  .{{ localClass }}__image, .{{ localClass }}__image img {
    {% if isPlaceholder %}
      margin: 8px;
      width: calc(100% - 16px);
    {% else %}
      padding: 4px;
    {% endif %}
    border-radius: {{ imageBorderRadius }}px;
  }
</style>

<div class="{{ globalClass }} {{ localClass }} d-flex w-100 position-relative">
  <a
    href="{{'javascript:void(0)' if product.on_hold | int else ['product/', product.slug or product.uniqid] | join}}"
    id="sellix-card-container-{{id}}"
    class="{{ globalClass }}__container {{ localClass }}__container"
  >
    {% if onHold or isOut or (showBadge and isLicense) %}
      <div class="{{ globalClass }}__badge-container">
        {% if onHold or isOut %}
          <div class="{{ globalClass }}__badge icon-badge">
            {% render_snippet 'Icons: Hand' %}
          </div>
        {% endif %}

        {% if showBadge and isLicense %}
          <div class="{{ globalClass }}__badge {{ 'icon-badge' if onHold }}">
            {{ 'shop.shared.titles.productType.license' | t }}
          </div>
        {% endif %}
      </div>
    {% endif %}

    <div class="{{ globalClass}}__card {{ localClass }}__card unselectable">
      <div class="{{ globalClass}}__image {{ localClass }}__image {{'image-placeholder' if isPlaceholder}} {{ placeholderType }}">
        <div class="{{ globalClass }}__cart {{ localClass }}__cart">
          {% render_snippet 'Cart button 2', product=product %}
        </div>
        {% if isPlaceholder %}
          {% render_snippet 'Product: Placeholder icon', product=product, dark=(true if placeholderType == 'dark' else undefined) %}
        {% else %}
          <img src="{{image}}" alt="{{product.title}}" loading="lazy" />
        {% endif %}
      </div>

      <div class="{{ globalClass }}__info {{ localClass }}__info">
        <div class="{{ globalClass }}__description {{ localClass }}__description">
          <div class="{{ globalClass }}__title {{ localClass }}__title justify-content-{{ titleTextAlign }}">
            {{product.title}}
          </div>

          {% if product.price_discount and not isFree %}
            <div class="{{ globalClass }}__price-with-discount {{ localClass }}__price-with-discount">
              {% render_snippet
                'Shared: Price',
                currency=product.currency,
                price=product.min_price,
                discount=product.price_discount,
                show_image=true,
                show_initial_price='last',
                properties=priceProperties
              %}
              <span class="{{ globalClass }}__tax {{ localClass }}__tax"></span>
            </div>
          {% else %}
            <div class="{{ globalClass }}__group-description-info">
              {% if not isFree and product.price_variants %}
                <span class="{{ globalClass }}__starting-at">
                  {{ 'shop.shared.titles.startingAt' | t }}
                </span>
              {% endif %}

              <div class="{{ globalClass }}__price {{ localClass }}__price">
                {% if isFree %}
                  {% render_snippet 'Tag', tag=('shop.shared.titles.free' | t), type='success' %}
                {% elif isPayWhatYouWant %}
                  {% render_snippet 'Tag', tag=('shop.main.cards.product.yourPrice' | t) %}
                  <span class="{{ globalClass }}__tax {{ localClass }}__tax"></span>
                {% else %}
                  {% render_snippet
                    'Shared: Price',
                    currency=product.currency,
                    price=product.min_price,
                    show_image=true,
                    show_initial_price='last',
                    properties=priceProperties
                  %}

                  <span class="{{ globalClass }}__tax {{ localClass }}__tax"></span>
                {% endif %}
              </div>
            </div>
          {% endif %}

          <div class="{{ globalClass }}__description-additional">
            {# if showStockInfo %}
              {% render_snippet
                'Product: Stock',
                stock=product.stock,
                hide_stock_counter=hideStockCounter
              %}
            {% endif #}
          </div>
        </div>

        {% if onHold %}
          <span class="{{ globalClass }}__info-comment {{ localClass }}__info-comment">
            {{ 'shop.main.cards.product.onHold' | t }}
          </span>
        {% endif %}

        {% if isOut %}
          <span class="{{ globalClass }}__info-comment {{ localClass }}__info-comment">
            {{ 'shop.main.cards.product.soldOut' | t }}
          </span>
        {% endif %}
      </div>
    </div>
  </a>
</div>

<script type='application/javascript'>
  $(document).ready(function () {
    const shopInfo = SellixContext.getShopInfo();
    const ipcountry = Cookies.get('ipcountry') || '';

    let taxAmount = +shopInfo.shop.vat_percentage ? +shopInfo.shop.vat_percentage : '';
    if (shopInfo.shop.tax_configuration === 'EU' || shopInfo.shop.tax_configuration === 'CUSTOM') {
      if (shopInfo.shop.tax_configuration_data && ipcountry) {
        const countryTaxData = shopInfo.shop.tax_configuration_data.find(({ country, type }) => country === ipcountry);
        if (countryTaxData) {
          taxAmount = countryTaxData.tax_percentage;
        }
      }
    }

    if (shopInfo.shop.display_tax_on_storefront && taxAmount) {
      taxAmount = parseFloat(Number(taxAmount).toFixed(2));
      $('.{{ localClass }}__tax').append(`<span>${taxAmount}% {{ 'shop.main.cards.product.tax' | t }}</span>`);
    }
  });
</script>
