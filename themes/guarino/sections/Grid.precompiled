function root(env, context, frame, runtime, cb) {
var lineno = 0;
var colno = 0;
var output = "";
try {
var parentTemplate = null;
output += "<style>\n\n  .sellix-grid {\n    column-gap: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"grid_column_gap"), env.opts.autoescape);
output += "px;\n    margin-bottom: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"grid_margin"), env.opts.autoescape);
output += "px;\n    border: ";
output += runtime.suppressValue((runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"show_banner_border")?"1px solid var(--borderColor)":"none"), env.opts.autoescape);
output += ";\n    background-color: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "colors")),runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"grid_background_color")), env.opts.autoescape);
output += ";\n    padding: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"grid_padding"), env.opts.autoescape);
output += "px;\n    box-shadow: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"grid_shadow"), env.opts.autoescape);
output += ";\n    margin-bottom: ";
output += runtime.suppressValue(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "properties")),"grid_margin"), env.opts.autoescape);
output += "px;\n  }\n</style>\n\n<div class=\"sellix-grid\">\n";
frame = frame.push();
var t_3 = runtime.fromIterator(runtime.memberLookup((runtime.contextOrFrameLookup(context, frame, "settings")),"block_order"));
runtime.asyncEach(t_3, 1, function(block_name, t_1, t_2,next) {
frame.set("block_name", block_name);
frame.set("loop.index", t_1 + 1);
frame.set("loop.index0", t_1);
frame.set("loop.revindex", t_2 - t_1);
frame.set("loop.revindex0", t_2 - t_1 - 1);
frame.set("loop.first", t_1 === 0);
frame.set("loop.last", t_1 === t_2 - 1);
frame.set("loop.length", t_2);
env.getExtension("RenderBlock")["run"](context,block_name, function(t_5,t_4) {
if(t_5) { cb(t_5); return; }
output += runtime.suppressValue(t_4, true && env.opts.autoescape);
next(t_1);
});
}, function(t_7,t_6) {
if(t_7) { cb(t_7); return; }
frame = frame.pop();
output += "  </div>\n  <script src=\"";
output += runtime.suppressValue(env.getFilter("asset_url").call(context, "script2.js"), env.opts.autoescape);
output += "\"></script>";
if(parentTemplate) {
parentTemplate.rootRenderFunc(env, context, frame, runtime, cb);
} else {
cb(null, output);
}
});
} catch (e) {
  cb(runtime.handleError(e, lineno, colno));
}
}
return {
root: root
};
